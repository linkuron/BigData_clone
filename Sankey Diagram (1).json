{"src":"{\"ownername\":\"plotdb\",\"key\":965,\"name\":\"Sankey Diagram\",\"owner\":4,\"theme\":null,\"parent\":null,\"description\":\"A standard sankey diagram. Mainly used for relationship and flow.\",\"basetype\":[\"12\"],\"visualencoding\":[\"3\",\"4\",\"6\"],\"category\":[\"1\"],\"tags\":[\"flow\",\"relation\",\"connection\"],\"likes\":1,\"searchable\":true,\"dimlen\":3,\"createdtime\":\"2016-03-06T16:34:56.000Z\",\"modifiedtime\":\"2017-01-16T00:31:57.000Z\",\"doc\":{\"name\":\"document\",\"size\":0,\"type\":\"html\",\"lines\":1,\"content\":\"\"},\"style\":{\"name\":\"stylesheet\",\"size\":0,\"type\":\"css\",\"lines\":1,\"content\":\"\"},\"code\":{\"name\":\"code\",\"size\":12445,\"type\":\"javascript\",\"lines\":299,\"content\":\"{\\n  sample: function() {\\n    var continent = plotdb.data.sample.continent;\\n    var len = continent.length;\\n    var list = d3.range(len * len);\\n    return {\\n      src: [{name: \\\"Source Continent\\\", data: list.map(function(d,i) { return continent.get(parseInt(d/len)); })}],\\n      des: [{name: \\\"Target Continent\\\", data: list.map(function(d,i) { return continent.get(d%len); })}],\\n      value: [{name: \\\"Value\\\", data: list.map(function(d,i) { return Math.round(Math.random() * 90 + 10); })}] \\n    };\\n  },\\n  dimension: {\\n    src: { type: [], require: true, desc: \\\"source\\\" },\\n    des: { type: [], require: true, desc: \\\"target\\\" },\\n    value: { type: [plotdb.Number], require: true, desc: \\\"amount of flow\\\" }\\n  },\\n  config: {\\n    fontFamily: {},\\n    background: {},\\n    textFill: {},\\n    fillOpacity: {},\\n    fontSize: {},\\n    padding: {},\\n    margin: {},\\n    palette: {rebindOnChange: true},\\n    otherLabel: {},\\n    otherLimit: {},\\n    thick: { name: \\\"Bar Thickness\\\", type: [plotdb.Number], default: 10},\\n  },\\n  init: function() {\\n    var that = this;\\n    this.svg = d3.select(this.root).append(\\\"svg\\\");\\n    this.defs = this.svg.append(\\\"defs\\\");\\n    this.yRange = [0,1];\\n    this.overlap = plotd3.rwd.overlap();\\n  },\\n  getGID: function(src, des) {\\n    return encodeURIComponent(src)+\\\"/\\\"+encodeURIComponent(des); \\n  },\\n  hover: null,\\n  setHover: function(item) {\\n    this.hover = item;\\n    this.render();\\n    if(this.handler) clearTimeout(this.handler);\\n    this.handler = 0;\\n  },\\n  clearHover: function() {\\n    var that = this;\\n    if(this.handler) clearTimeout(this.handler);\\n    this.handler = setTimeout(function() {\\n      that.hover = null;\\n      that.handler = 0;\\n      that.render();\\n    }, 10);\\n  },\\n  parse: function() {\\n    var that = this;\\n    var chash = {src: {}, des: {}};\\n    if(!this.dimension.value.fields.length) this.data.map(function(d,i) { d.value = 1; });\\n    this.data.forEach(function(d,i) {\\n      chash.src[d.src] = (chash.src[d.src] || 0) + d.value;\\n      chash.des[d.des] = (chash.des[d.des] || 0) + d.value;\\n    });\\n    this.data.forEach(function(d,i) {\\n      if(chash.src[d.src] < that.config.otherLimit) d.src = that.config.otherLabel;\\n      if(chash.des[d.des] < that.config.otherLimit) d.des = that.config.otherLabel;\\n    });\\n    this.srcRange = d3.map(this.data, function(it) { return it.src; }).keys();\\n    this.desRange = d3.map(this.data, function(it) { return it.des; }).keys();\\n    this.srcAmount = {};\\n    this.desAmount = {};\\n    this.srctotal = 0;\\n    this.destotal = 0;\\n    this.srcRange.sort();\\n    this.desRange.sort();\\n    this.srcCharCount = d3.max(this.srcRange.map(function(it) { return it.length; }));\\n    this.desCharCount = d3.max(this.desRange.map(function(it) { return it.length; }));\\n    for(var idx = 0; idx < this.srcRange.length; idx++) {\\n      var name = this.srcRange[idx];\\n      this.srcAmount[name] = {size: 0, name: name, _offset: 0, des: {}}\\n    }\\n    for(var idx = 0; idx < this.desRange.length; idx++) {\\n      var name = this.desRange[idx];\\n      this.desAmount[name] = {size: 0, name: name, _offset: 0};\\n    }\\n    this.data.forEach(function(it) {\\n      that.srcAmount[it.src].size += it.value;\\n      that.desAmount[it.des].size += it.value;\\n      that.srctotal += it.value;\\n      that.destotal += it.value;\\n      if(!that.srcAmount[it.src].des[it.des]) {\\n        that.srcAmount[it.src].des[it.des] = 0;\\n      }\\n      that.srcAmount[it.src].des[it.des] += it.value;\\n    });\\n    var lastY = 0;\\n    for(var idx = 0; idx < this.srcRange.length; idx++) {\\n      var node = this.srcAmount[this.srcRange[idx]];\\n      node.y = lastY;\\n      lastY = node.y + node.size;\\n    }\\n    lastY = 0;\\n    for(var idx = 0; idx < this.desRange.length; idx++) {\\n      var node = this.desAmount[this.desRange[idx]];\\n      node.y = lastY;\\n      lastY = node.y + node.size;\\n    }\\n    this.yRange = [0, lastY];\\n    this.parsed = {};\\n    this.parsed.src = this.srcRange.map(function(it) { return that.srcAmount[it]; });\\n    this.parsed.des = this.desRange.map(function(it) { return that.desAmount[it]; });\\n    this.parsed.links = [];\\n    this.gradients = {};\\n    this.gids = [];\\n    for(var idx = 0; idx < this.srcRange.length; idx++) {\\n      var node = this.srcAmount[this.srcRange[idx]];\\n      var keys = d3.map(node.des).keys();\\n      keys.sort();\\n      for(var jdx = 0; jdx < keys.length; jdx++) {\\n        var src = this.srcAmount[this.srcRange[idx]];\\n        var des = this.desAmount[keys[jdx]];\\n        var size = src.des[keys[jdx]];\\n        this.parsed.links.push({\\n          source: src,\\n          target: des,\\n          size: size,\\n          srcy: src._offset,\\n          desy: des._offset\\n        });\\n        src._offset += size;\\n        des._offset += size;\\n        if(!this.gradients[this.srcRange[idx]]) this.gradients[this.srcRange[idx]] = {};\\n        if(!this.gradients[this.srcRange[idx]][keys[jdx]]) {\\n          var node = this.gradients[this.srcRange[idx]][keys[jdx]] = {};\\n          node.id = this.getGID(this.srcRange[idx],keys[jdx]); \\n          this.gids.push(node);     \\n        }\\n      }\\n    }\\n  },\\n\\n  bind: function() {\\n    var that = this,sel;\\n    sel = this.svg.selectAll(\\\"path.connect\\\").data(this.parsed.links);\\n    sel.exit().remove();\\n    sel.enter().append(\\\"path\\\").attr({class: \\\"connect\\\"})\\n        .on(\\\"mouseover\\\", function(d,i) { that.setHover({src: d.source.name, des: d.target.name}); })\\n        .on(\\\"mouseout\\\", function(d,i) { that.clearHover(); });\\n    sel = this.svg.selectAll(\\\"rect.src.data\\\").data(this.parsed.src);\\n    sel.exit().remove();\\n    sel.enter().append(\\\"rect\\\").attr({class: \\\"src data\\\"}).on(\\\"mouseover\\\", function(d,i) { that.setHover({src: d.name}); });\\n    sel = this.svg.selectAll(\\\"rect.des.data\\\").data(this.parsed.des);\\n    sel.exit().remove();\\n    sel.enter().append(\\\"rect\\\").attr({class: \\\"des data\\\"}).on(\\\"mouseover\\\", function(d,i) { that.setHover({des: d.name}); });\\n    sel = this.svg.selectAll(\\\"text.src\\\").data(this.parsed.src);\\n    sel.exit().remove();\\n    sel.enter().append(\\\"text\\\").attr({class: \\\"src\\\"});\\n    sel = this.svg.selectAll(\\\"text.des\\\").data(this.parsed.des);\\n    sel.exit().remove();\\n    sel.enter().append(\\\"text\\\").attr({class: \\\"des\\\"});\\n    this.svg.selectAll(\\\"rect\\\").on(\\\"mouseout\\\", function(d,i) { that.clearHover(); });\\n    sel = this.defs.selectAll(\\\"linearGradient\\\").data(this.gids);\\n    sel.exit().remove();\\n    sel.enter().append(\\\"linearGradient\\\").each(function(d,i) {\\n      var node = d3.select(this);\\n      d.g1 = node.append(\\\"stop\\\").attr({offset: \\\"0%\\\"});\\n      d.g2 = node.append(\\\"stop\\\").attr({offset: \\\"100%\\\"});\\n    });\\n    this.defs.selectAll(\\\"linearGradient\\\").each(function(d,i) {\\n      var node = d3.select(this);//.selectAll(\\\"stop\\\");\\n      d.g1 = node.select(\\\"stop:nth-child(1)\\\");\\n      d.g2 = node.select(\\\"stop:nth-child(2)\\\");\\n    });\\n    this.defs.selectAll(\\\"linearGradient\\\").attr({\\n      x1: \\\"0%\\\", y1: \\\"0%\\\", x2: \\\"100%\\\", y2: \\\"0%\\\", id: function(d,i) { return d.id; }\\n    });\\n    for(var idx = 0; idx < this.srcRange.length; idx++) {\\n      var src = this.srcRange[idx];\\n      var node = this.srcAmount[src];\\n      var keys = d3.map(node.des).keys();\\n      for(var jdx = 0; jdx < keys.length; jdx++) {\\n        var des = keys[jdx];\\n        var hsl1 = d3.hsl(this.cScale(src));\\n        var hsl2 = d3.hsl(this.cScale(des));\\n        hsl1.s /= 2;\\n        hsl2.s /= 2;\\n        this.gradients[src][des].g1.style({\\\"stop-color\\\": hsl1.toString()});\\n        this.gradients[src][des].g2.style({\\\"stop-color\\\": hsl2.toString()});\\n      }\\n    }\\n  },\\n  resize: function() {\\n    var that = this;\\n    var box = this.root.getBoundingClientRect();\\n    var width = this.width = box.width;\\n    var height = this.height = box.height;\\n    this.svg.attr({\\n      width: width + \\\"px\\\", height: height + \\\"px\\\",\\n      viewBox: [0,0,width,height].join(\\\" \\\"),\\n      preserveAspectRatio: \\\"xMidYMid\\\"\\n    });\\n    this.cScale = plotdb.Palette.scale.ordinal(this.config.palette);\\n    this.yScale = d3.scale.linear()\\n      .domain(this.yRange)\\n      .range([this.config.margin, height - this.config.margin]);\\n    this.resized = true;\\n  },\\n  render: function() {\\n    var that = this;\\n    var barWidth = this.config.thick;\\n    if(this.config.fontFamily) d3.select(this.root).style(\\\"font-family\\\", this.config.fontFamily);\\n    d3.select(this.root).style(\\\"background-color\\\", this.config.background);\\n    this.svg.selectAll(\\\"text\\\").attr({\\n      \\\"font-size\\\": that.config.fontSize,\\n      \\\"fill\\\": that.config.textFill,\\n      dy: \\\"0.38em\\\"\\n\\n    });\\n    this.svg.selectAll(\\\"text.src\\\").attr(\\\"text-anchor\\\", \\\"end\\\");\\n    this.svg.selectAll(\\\"text.des\\\").attr(\\\"text-anchor\\\", \\\"start\\\");\\n    this.svg.selectAll(\\\"text.src,text.des\\\").text(function(d,i) { return d.name; });\\n    this.svg.selectAll(\\\"text.src,text.des\\\").each(function(d,i) {\\n      var node = d3.select(this);\\n      if(node.attr(\\\"y\\\")) node = node.transition(\\\"morph\\\").duration(500);\\n      node.attr({\\n        y: function(it) { \\n          return ( that.yScale(it.y + it.size) + that.yScale(it.y) ) / 2;\\n        }\\n      });\\n    });\\n    var srcWidth = d3.max(this.svg.selectAll(\\\"text.src\\\")[0].map(function(d,i) { return d.getBoundingClientRect().width; })) + this.config.padding;\\n    var desWidth = d3.max(this.svg.selectAll(\\\"text.des\\\")[0].map(function(d,i) { return d.getBoundingClientRect().width; })) + this.config.padding;\\n    this.svg.selectAll(\\\"text.src\\\").attr({ x: this.config.margin + srcWidth - this.config.padding });\\n    this.svg.selectAll(\\\"text.des\\\").attr({ x: this.width - this.config.margin - desWidth + this.config.padding });\\n    this.svg.selectAll(\\\"rect\\\").attr({fill: function(it) { return that.cScale(it.name); }});\\n    this.svg.selectAll(\\\"rect.src\\\").transition(\\\"morph\\\").duration(500).attr({\\n      x: this.config.margin + srcWidth,\\n      y: function(it) { return that.yScale(it.y); },\\n      width: barWidth,\\n      height: function(it) { return that.yScale(it.y + it.size) - that.yScale(it.y); },\\n    });\\n    this.svg.selectAll(\\\"rect.des\\\").transition(\\\"morph\\\").duration(500).attr({\\n      x: this.width - barWidth - this.config.margin - desWidth,\\n      y: function(it) { return that.yScale(it.y); },\\n      width: barWidth,\\n      height: function(it) { return that.yScale(it.y + it.size) - that.yScale(it.y); },\\n    });\\n    this.svg.selectAll(\\\"path.connect\\\").transition(\\\"morph\\\").duration(500).attr({\\n      d: function(it) {\\n        var x1 = that.config.margin + barWidth + srcWidth;\\n        var x2 = that.width - that.config.margin - barWidth - desWidth;\\n        var x3 = x1 * 0.67 + x2 * 0.33;\\n        var x4 = x1 * 0.33 + x2 * 0.67;\\n        var y1 = that.yScale(it.source.y + it.srcy);\\n        var y2 = that.yScale(it.source.y + it.srcy + it.size);\\n        var y3 = that.yScale(it.target.y + it.desy);\\n        var y4 = that.yScale(it.target.y + it.desy + it.size);\\n\\n        var ret = [\\n          \\\"M\\\",x1, y2,\\n          \\\"L\\\",x1, y1,\\n          \\\"C\\\",x3, y1, x4, y3, x2, y3,\\n          \\\"L\\\",x2, y4,\\n          \\\"C\\\",x4, y4, x3, y2, x1, y2\\n        ];\\n        return ret.join(\\\" \\\");\\n      },\\n      fill: function(it) {\\n        return [\\\"url(#\\\",that.getGID(it.source.name, it.target.name),\\\")\\\"].join(\\\"\\\");\\n      },\\n    })\\n    this.svg.selectAll(\\\"path.connect\\\").transition(\\\"opacity\\\").duration(500).attr({\\n      opacity: 0.3\\n    });\\n    this.svg.selectAll(\\\"rect.src\\\").transition(\\\"opacity\\\").duration(500).attr({\\n      opacity: function(d,i) { return (!that.hover || d.name == that.hover.src ? 1: 0.1); }\\n    });\\n    this.svg.selectAll(\\\"rect.des\\\").transition(\\\"opacity\\\").duration(500).attr({\\n      opacity: function(d,i) { return (!that.hover || d.name == that.hover.des ? 1: 0.1); }\\n    });\\n    this.svg.selectAll(\\\".connect\\\").transition(\\\"opacity\\\").duration(500).attr({\\n      opacity: function(d,i) {\\n        return (!that.hover || ((d.source.name == that.hover.src || !that.hover.src) && \\n                                (d.target.name == that.hover.des || !that.hover.des) ) ? that.config.fillOpacity : 0.1);\\n      }\\n    });\\n    if(this.resized) {\\n      this.overlap.nodes(this.svg.selectAll(\\\"text.src\\\"),function(d,i) { return d.size; });\\n      this.overlap.nodes(this.svg.selectAll(\\\"text.des\\\"),function(d,i) { return d.size; });\\n      this.resized = false;\\n    }\\n    this.svg.selectAll(\\\"text.src\\\").transition().attr({\\n      opacity: function(d,i) { return (!that.hover || !that.hover.src ? (d.overlap?0:1) : (that.hover.src == d.name ? 1 : 0.1)); }\\n    });\\n    this.svg.selectAll(\\\"text.des\\\").transition().attr({\\n      opacity: function(d,i) { return (!that.hover || !that.hover.des ? (d.overlap?0:1) : (that.hover.des == d.name ? 1 : 0.1)); }\\n    }); \\n  }\\n}\"},\"assets\":[],\"dimension\":{\"des\":{\"desc\":\"target\",\"type\":[],\"fields\":[],\"require\":true},\"src\":{\"desc\":\"source\",\"type\":[],\"fields\":[],\"require\":true},\"value\":{\"desc\":\"amount of flow\",\"type\":[\"Number\"],\"fields\":[],\"require\":true}},\"config\":{\"thick\":{\"name\":\"Bar Thickness\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":\"20\",\"default\":10},\"margin\":{\"name\":\"Margin\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":\"5\",\"default\":10,\"category\":\"Global Settings\"},\"padding\":{\"name\":\"Padding\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":\"10\",\"default\":10,\"category\":\"Global Settings\"},\"palette\":{\"name\":\"Palette\",\"type\":[{\"re\":{},\"name\":\"Palette\",\"level\":30,\"scale\":{},\"binary\":{\"colors\":[{\"hex\":\"#ff8356\"},{\"hex\":\"#0076a1\"}]},\"plotdb\":{\"colors\":[{\"hex\":\"#ed1d78\"},{\"hex\":\"#c59b6d\"},{\"hex\":\"#8cc63f\"},{\"hex\":\"#28aae2\"}]},\"default\":{\"colors\":[{\"hex\":\"#1d3263\"},{\"hex\":\"#226c87\"},{\"hex\":\"#f8d672\"},{\"hex\":\"#e48e11\"},{\"hex\":\"#e03215\"},{\"hex\":\"#ab2321\"}]},\"subtype\":{\"binary\":\"binary\",\"diverging\":\"diverging\",\"sequential\":\"sequential\",\"qualitative\":\"qualitative\"},\"diverging\":{\"colors\":[{\"hex\":\"#74001a\"},{\"hex\":\"#cd2149\"},{\"hex\":\"#f23971\"},{\"hex\":\"#ff84ab\"},{\"hex\":\"#ffc3d7\"},{\"hex\":\"#f2f2dd\"},{\"hex\":\"#b8d9ed\"},{\"hex\":\"#81b1d0\"},{\"hex\":\"#3d8bb7\"},{\"hex\":\"#0071a8\"},{\"hex\":\"#003558\"}]},\"sequential\":{\"colors\":[{\"hex\":\"#950431\"},{\"hex\":\"#be043e\"},{\"hex\":\"#ec326d\"},{\"hex\":\"#fc82a9\"},{\"hex\":\"#febed2\"},{\"hex\":\"#fee6ee\"}]},\"qualitative\":{\"colors\":[{\"hex\":\"#c05ae0\"},{\"hex\":\"#cf2d0c\"},{\"hex\":\"#e9ab1e\"},{\"hex\":\"#86ffb5\"},{\"hex\":\"#64dfff\"},{\"hex\":\"#003f7d\"}]}}],\"value\":{\"colors\":[{\"hex\":\"#f4502a\",\"idx\":0},{\"hex\":\"#f1c227\",\"idx\":1},{\"hex\":\"#008a6d\",\"idx\":2},{\"hex\":\"#00acdb\",\"idx\":3},{\"hex\":\"#0064a8\",\"idx\":4}]},\"default\":{\"colors\":[{\"hex\":\"#f4502a\"},{\"hex\":\"#f1c227\"},{\"hex\":\"#008a6d\"},{\"hex\":\"#00acdb\"},{\"hex\":\"#0064a8\"}]},\"category\":\"Global Settings\",\"rebindOnChange\":true},\"fontSize\":{\"name\":\"Font Size\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":\"12\",\"default\":13,\"category\":\"Global Settings\"},\"textFill\":{\"name\":\"Text Color\",\"type\":[{\"Gray\":\"#cccccc\",\"name\":\"Color\",\"Empty\":\"#ffffff\",\"level\":10,\"Neutral\":\"#cccccc\",\"default\":\"#dc4521\",\"subtype\":{\"neutral\":\"neutral\",\"negative\":\"negative\",\"positive\":\"positive\"},\"Negative\":\"#d93510\",\"Positive\":\"#3f7ab5\"}],\"value\":\"#000000\",\"default\":\"#000000\",\"category\":\"Global Settings\"},\"background\":{\"name\":\"Background\",\"type\":[{\"Gray\":\"#cccccc\",\"name\":\"Color\",\"Empty\":\"#ffffff\",\"level\":10,\"Neutral\":\"#cccccc\",\"default\":\"#dc4521\",\"subtype\":{\"neutral\":\"neutral\",\"negative\":\"negative\",\"positive\":\"positive\"},\"Negative\":\"#d93510\",\"Positive\":\"#3f7ab5\"}],\"value\":\"#ffffff\",\"default\":\"#ffffff\",\"category\":\"Global Settings\"},\"fontFamily\":{\"name\":\"Font\",\"type\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}],\"value\":\"Arial\",\"default\":\"Arial\",\"category\":\"Global Settings\"},\"otherLabel\":{\"name\":\"Label for 'other'\",\"type\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}],\"value\":\"Other\",\"default\":\"Other\",\"category\":\"Label\"},\"otherLimit\":{\"desc\":\"Data smaller than this value will be clustered into one set of data\",\"name\":\"Small Data Threshold\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":0,\"default\":0,\"category\":\"Value\"},\"fillOpacity\":{\"name\":\"Fill Opacity\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":\"0.45\",\"default\":0.6,\"category\":\"Global Settings\"}},\"library\":[\"d3/3.5.12/min\",\"plotd3/0.1.0\"],\"local\":null,\"inherit\":[],\"metashow\":null,\"footer\":null}","obj":{"ownername":"plotdb","key":965,"name":"Sankey Diagram","owner":4,"theme":null,"parent":null,"description":"A standard sankey diagram. Mainly used for relationship and flow.","basetype":["12"],"visualencoding":["3","4","6"],"category":["1"],"tags":["flow","relation","connection"],"likes":1,"searchable":true,"dimlen":3,"createdtime":"2016-03-06T16:34:56.000Z","modifiedtime":"2017-01-16T00:31:57.000Z","doc":{"name":"document","size":0,"type":"html","lines":1,"content":""},"style":{"name":"stylesheet","size":0,"type":"css","lines":1,"content":""},"code":{"name":"code","size":12445,"type":"javascript","lines":299,"content":"{\n  sample: function() {\n    var continent = plotdb.data.sample.continent;\n    var len = continent.length;\n    var list = d3.range(len * len);\n    return {\n      src: [{name: \"Source Continent\", data: list.map(function(d,i) { return continent.get(parseInt(d/len)); })}],\n      des: [{name: \"Target Continent\", data: list.map(function(d,i) { return continent.get(d%len); })}],\n      value: [{name: \"Value\", data: list.map(function(d,i) { return Math.round(Math.random() * 90 + 10); })}] \n    };\n  },\n  dimension: {\n    src: { type: [], require: true, desc: \"source\" },\n    des: { type: [], require: true, desc: \"target\" },\n    value: { type: [plotdb.Number], require: true, desc: \"amount of flow\" }\n  },\n  config: {\n    fontFamily: {},\n    background: {},\n    textFill: {},\n    fillOpacity: {},\n    fontSize: {},\n    padding: {},\n    margin: {},\n    palette: {rebindOnChange: true},\n    otherLabel: {},\n    otherLimit: {},\n    thick: { name: \"Bar Thickness\", type: [plotdb.Number], default: 10},\n  },\n  init: function() {\n    var that = this;\n    this.svg = d3.select(this.root).append(\"svg\");\n    this.defs = this.svg.append(\"defs\");\n    this.yRange = [0,1];\n    this.overlap = plotd3.rwd.overlap();\n  },\n  getGID: function(src, des) {\n    return encodeURIComponent(src)+\"/\"+encodeURIComponent(des); \n  },\n  hover: null,\n  setHover: function(item) {\n    this.hover = item;\n    this.render();\n    if(this.handler) clearTimeout(this.handler);\n    this.handler = 0;\n  },\n  clearHover: function() {\n    var that = this;\n    if(this.handler) clearTimeout(this.handler);\n    this.handler = setTimeout(function() {\n      that.hover = null;\n      that.handler = 0;\n      that.render();\n    }, 10);\n  },\n  parse: function() {\n    var that = this;\n    var chash = {src: {}, des: {}};\n    if(!this.dimension.value.fields.length) this.data.map(function(d,i) { d.value = 1; });\n    this.data.forEach(function(d,i) {\n      chash.src[d.src] = (chash.src[d.src] || 0) + d.value;\n      chash.des[d.des] = (chash.des[d.des] || 0) + d.value;\n    });\n    this.data.forEach(function(d,i) {\n      if(chash.src[d.src] < that.config.otherLimit) d.src = that.config.otherLabel;\n      if(chash.des[d.des] < that.config.otherLimit) d.des = that.config.otherLabel;\n    });\n    this.srcRange = d3.map(this.data, function(it) { return it.src; }).keys();\n    this.desRange = d3.map(this.data, function(it) { return it.des; }).keys();\n    this.srcAmount = {};\n    this.desAmount = {};\n    this.srctotal = 0;\n    this.destotal = 0;\n    this.srcRange.sort();\n    this.desRange.sort();\n    this.srcCharCount = d3.max(this.srcRange.map(function(it) { return it.length; }));\n    this.desCharCount = d3.max(this.desRange.map(function(it) { return it.length; }));\n    for(var idx = 0; idx < this.srcRange.length; idx++) {\n      var name = this.srcRange[idx];\n      this.srcAmount[name] = {size: 0, name: name, _offset: 0, des: {}}\n    }\n    for(var idx = 0; idx < this.desRange.length; idx++) {\n      var name = this.desRange[idx];\n      this.desAmount[name] = {size: 0, name: name, _offset: 0};\n    }\n    this.data.forEach(function(it) {\n      that.srcAmount[it.src].size += it.value;\n      that.desAmount[it.des].size += it.value;\n      that.srctotal += it.value;\n      that.destotal += it.value;\n      if(!that.srcAmount[it.src].des[it.des]) {\n        that.srcAmount[it.src].des[it.des] = 0;\n      }\n      that.srcAmount[it.src].des[it.des] += it.value;\n    });\n    var lastY = 0;\n    for(var idx = 0; idx < this.srcRange.length; idx++) {\n      var node = this.srcAmount[this.srcRange[idx]];\n      node.y = lastY;\n      lastY = node.y + node.size;\n    }\n    lastY = 0;\n    for(var idx = 0; idx < this.desRange.length; idx++) {\n      var node = this.desAmount[this.desRange[idx]];\n      node.y = lastY;\n      lastY = node.y + node.size;\n    }\n    this.yRange = [0, lastY];\n    this.parsed = {};\n    this.parsed.src = this.srcRange.map(function(it) { return that.srcAmount[it]; });\n    this.parsed.des = this.desRange.map(function(it) { return that.desAmount[it]; });\n    this.parsed.links = [];\n    this.gradients = {};\n    this.gids = [];\n    for(var idx = 0; idx < this.srcRange.length; idx++) {\n      var node = this.srcAmount[this.srcRange[idx]];\n      var keys = d3.map(node.des).keys();\n      keys.sort();\n      for(var jdx = 0; jdx < keys.length; jdx++) {\n        var src = this.srcAmount[this.srcRange[idx]];\n        var des = this.desAmount[keys[jdx]];\n        var size = src.des[keys[jdx]];\n        this.parsed.links.push({\n          source: src,\n          target: des,\n          size: size,\n          srcy: src._offset,\n          desy: des._offset\n        });\n        src._offset += size;\n        des._offset += size;\n        if(!this.gradients[this.srcRange[idx]]) this.gradients[this.srcRange[idx]] = {};\n        if(!this.gradients[this.srcRange[idx]][keys[jdx]]) {\n          var node = this.gradients[this.srcRange[idx]][keys[jdx]] = {};\n          node.id = this.getGID(this.srcRange[idx],keys[jdx]); \n          this.gids.push(node);     \n        }\n      }\n    }\n  },\n\n  bind: function() {\n    var that = this,sel;\n    sel = this.svg.selectAll(\"path.connect\").data(this.parsed.links);\n    sel.exit().remove();\n    sel.enter().append(\"path\").attr({class: \"connect\"})\n        .on(\"mouseover\", function(d,i) { that.setHover({src: d.source.name, des: d.target.name}); })\n        .on(\"mouseout\", function(d,i) { that.clearHover(); });\n    sel = this.svg.selectAll(\"rect.src.data\").data(this.parsed.src);\n    sel.exit().remove();\n    sel.enter().append(\"rect\").attr({class: \"src data\"}).on(\"mouseover\", function(d,i) { that.setHover({src: d.name}); });\n    sel = this.svg.selectAll(\"rect.des.data\").data(this.parsed.des);\n    sel.exit().remove();\n    sel.enter().append(\"rect\").attr({class: \"des data\"}).on(\"mouseover\", function(d,i) { that.setHover({des: d.name}); });\n    sel = this.svg.selectAll(\"text.src\").data(this.parsed.src);\n    sel.exit().remove();\n    sel.enter().append(\"text\").attr({class: \"src\"});\n    sel = this.svg.selectAll(\"text.des\").data(this.parsed.des);\n    sel.exit().remove();\n    sel.enter().append(\"text\").attr({class: \"des\"});\n    this.svg.selectAll(\"rect\").on(\"mouseout\", function(d,i) { that.clearHover(); });\n    sel = this.defs.selectAll(\"linearGradient\").data(this.gids);\n    sel.exit().remove();\n    sel.enter().append(\"linearGradient\").each(function(d,i) {\n      var node = d3.select(this);\n      d.g1 = node.append(\"stop\").attr({offset: \"0%\"});\n      d.g2 = node.append(\"stop\").attr({offset: \"100%\"});\n    });\n    this.defs.selectAll(\"linearGradient\").each(function(d,i) {\n      var node = d3.select(this);//.selectAll(\"stop\");\n      d.g1 = node.select(\"stop:nth-child(1)\");\n      d.g2 = node.select(\"stop:nth-child(2)\");\n    });\n    this.defs.selectAll(\"linearGradient\").attr({\n      x1: \"0%\", y1: \"0%\", x2: \"100%\", y2: \"0%\", id: function(d,i) { return d.id; }\n    });\n    for(var idx = 0; idx < this.srcRange.length; idx++) {\n      var src = this.srcRange[idx];\n      var node = this.srcAmount[src];\n      var keys = d3.map(node.des).keys();\n      for(var jdx = 0; jdx < keys.length; jdx++) {\n        var des = keys[jdx];\n        var hsl1 = d3.hsl(this.cScale(src));\n        var hsl2 = d3.hsl(this.cScale(des));\n        hsl1.s /= 2;\n        hsl2.s /= 2;\n        this.gradients[src][des].g1.style({\"stop-color\": hsl1.toString()});\n        this.gradients[src][des].g2.style({\"stop-color\": hsl2.toString()});\n      }\n    }\n  },\n  resize: function() {\n    var that = this;\n    var box = this.root.getBoundingClientRect();\n    var width = this.width = box.width;\n    var height = this.height = box.height;\n    this.svg.attr({\n      width: width + \"px\", height: height + \"px\",\n      viewBox: [0,0,width,height].join(\" \"),\n      preserveAspectRatio: \"xMidYMid\"\n    });\n    this.cScale = plotdb.Palette.scale.ordinal(this.config.palette);\n    this.yScale = d3.scale.linear()\n      .domain(this.yRange)\n      .range([this.config.margin, height - this.config.margin]);\n    this.resized = true;\n  },\n  render: function() {\n    var that = this;\n    var barWidth = this.config.thick;\n    if(this.config.fontFamily) d3.select(this.root).style(\"font-family\", this.config.fontFamily);\n    d3.select(this.root).style(\"background-color\", this.config.background);\n    this.svg.selectAll(\"text\").attr({\n      \"font-size\": that.config.fontSize,\n      \"fill\": that.config.textFill,\n      dy: \"0.38em\"\n\n    });\n    this.svg.selectAll(\"text.src\").attr(\"text-anchor\", \"end\");\n    this.svg.selectAll(\"text.des\").attr(\"text-anchor\", \"start\");\n    this.svg.selectAll(\"text.src,text.des\").text(function(d,i) { return d.name; });\n    this.svg.selectAll(\"text.src,text.des\").each(function(d,i) {\n      var node = d3.select(this);\n      if(node.attr(\"y\")) node = node.transition(\"morph\").duration(500);\n      node.attr({\n        y: function(it) { \n          return ( that.yScale(it.y + it.size) + that.yScale(it.y) ) / 2;\n        }\n      });\n    });\n    var srcWidth = d3.max(this.svg.selectAll(\"text.src\")[0].map(function(d,i) { return d.getBoundingClientRect().width; })) + this.config.padding;\n    var desWidth = d3.max(this.svg.selectAll(\"text.des\")[0].map(function(d,i) { return d.getBoundingClientRect().width; })) + this.config.padding;\n    this.svg.selectAll(\"text.src\").attr({ x: this.config.margin + srcWidth - this.config.padding });\n    this.svg.selectAll(\"text.des\").attr({ x: this.width - this.config.margin - desWidth + this.config.padding });\n    this.svg.selectAll(\"rect\").attr({fill: function(it) { return that.cScale(it.name); }});\n    this.svg.selectAll(\"rect.src\").transition(\"morph\").duration(500).attr({\n      x: this.config.margin + srcWidth,\n      y: function(it) { return that.yScale(it.y); },\n      width: barWidth,\n      height: function(it) { return that.yScale(it.y + it.size) - that.yScale(it.y); },\n    });\n    this.svg.selectAll(\"rect.des\").transition(\"morph\").duration(500).attr({\n      x: this.width - barWidth - this.config.margin - desWidth,\n      y: function(it) { return that.yScale(it.y); },\n      width: barWidth,\n      height: function(it) { return that.yScale(it.y + it.size) - that.yScale(it.y); },\n    });\n    this.svg.selectAll(\"path.connect\").transition(\"morph\").duration(500).attr({\n      d: function(it) {\n        var x1 = that.config.margin + barWidth + srcWidth;\n        var x2 = that.width - that.config.margin - barWidth - desWidth;\n        var x3 = x1 * 0.67 + x2 * 0.33;\n        var x4 = x1 * 0.33 + x2 * 0.67;\n        var y1 = that.yScale(it.source.y + it.srcy);\n        var y2 = that.yScale(it.source.y + it.srcy + it.size);\n        var y3 = that.yScale(it.target.y + it.desy);\n        var y4 = that.yScale(it.target.y + it.desy + it.size);\n\n        var ret = [\n          \"M\",x1, y2,\n          \"L\",x1, y1,\n          \"C\",x3, y1, x4, y3, x2, y3,\n          \"L\",x2, y4,\n          \"C\",x4, y4, x3, y2, x1, y2\n        ];\n        return ret.join(\" \");\n      },\n      fill: function(it) {\n        return [\"url(#\",that.getGID(it.source.name, it.target.name),\")\"].join(\"\");\n      },\n    })\n    this.svg.selectAll(\"path.connect\").transition(\"opacity\").duration(500).attr({\n      opacity: 0.3\n    });\n    this.svg.selectAll(\"rect.src\").transition(\"opacity\").duration(500).attr({\n      opacity: function(d,i) { return (!that.hover || d.name == that.hover.src ? 1: 0.1); }\n    });\n    this.svg.selectAll(\"rect.des\").transition(\"opacity\").duration(500).attr({\n      opacity: function(d,i) { return (!that.hover || d.name == that.hover.des ? 1: 0.1); }\n    });\n    this.svg.selectAll(\".connect\").transition(\"opacity\").duration(500).attr({\n      opacity: function(d,i) {\n        return (!that.hover || ((d.source.name == that.hover.src || !that.hover.src) && \n                                (d.target.name == that.hover.des || !that.hover.des) ) ? that.config.fillOpacity : 0.1);\n      }\n    });\n    if(this.resized) {\n      this.overlap.nodes(this.svg.selectAll(\"text.src\"),function(d,i) { return d.size; });\n      this.overlap.nodes(this.svg.selectAll(\"text.des\"),function(d,i) { return d.size; });\n      this.resized = false;\n    }\n    this.svg.selectAll(\"text.src\").transition().attr({\n      opacity: function(d,i) { return (!that.hover || !that.hover.src ? (d.overlap?0:1) : (that.hover.src == d.name ? 1 : 0.1)); }\n    });\n    this.svg.selectAll(\"text.des\").transition().attr({\n      opacity: function(d,i) { return (!that.hover || !that.hover.des ? (d.overlap?0:1) : (that.hover.des == d.name ? 1 : 0.1)); }\n    }); \n  }\n}"},"assets":[],"dimension":{"src":{"type":[],"require":true,"desc":"source","fields":[{"name":"Source Continent","data":["Asia","Asia","Asia","Asia","Asia","Asia","Europe","Europe","Europe","Europe","Europe","Europe","America","America","America","America","America","America","Oceania","Oceania","Oceania","Oceania","Oceania","Oceania","Australia","Australia","Australia","Australia","Australia","Australia","Africa","Africa","Africa","Africa","Africa","Africa"],"datatype":"String","bind":"src"}],"fieldName":["Source Continent"]},"des":{"type":[],"require":true,"desc":"target","fields":[{"name":"Target Continent","data":["Asia","Europe","America","Oceania","Australia","Africa","Asia","Europe","America","Oceania","Australia","Africa","Asia","Europe","America","Oceania","Australia","Africa","Asia","Europe","America","Oceania","Australia","Africa","Asia","Europe","America","Oceania","Australia","Africa","Asia","Europe","America","Oceania","Australia","Africa"],"datatype":"String","bind":"des"}],"fieldName":["Target Continent"]},"value":{"type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"require":true,"desc":"amount of flow","fields":[{"name":"Value","data":[18,54,33,35,12,38,84,41,85,73,67,56,55,35,89,98,41,88,15,29,50,24,22,91,50,71,19,59,72,47,99,22,25,57,97,42],"datatype":"Number","bind":"value"}],"fieldName":["Value"]}},"config":{"thick":{"name":"Bar Thickness","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"20","default":10},"margin":{"name":"Margin","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"5","default":10,"category":"Global Settings"},"padding":{"name":"Padding","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"10","default":10,"category":"Global Settings"},"palette":{"name":"Palette","type":[{"re":{},"name":"Palette","level":30,"scale":{},"binary":{"colors":[{"hex":"#ff8356"},{"hex":"#0076a1"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"subtype":{"binary":"binary","diverging":"diverging","sequential":"sequential","qualitative":"qualitative"},"diverging":{"colors":[{"hex":"#74001a"},{"hex":"#cd2149"},{"hex":"#f23971"},{"hex":"#ff84ab"},{"hex":"#ffc3d7"},{"hex":"#f2f2dd"},{"hex":"#b8d9ed"},{"hex":"#81b1d0"},{"hex":"#3d8bb7"},{"hex":"#0071a8"},{"hex":"#003558"}]},"sequential":{"colors":[{"hex":"#950431"},{"hex":"#be043e"},{"hex":"#ec326d"},{"hex":"#fc82a9"},{"hex":"#febed2"},{"hex":"#fee6ee"}]},"qualitative":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]}}],"value":{"colors":[{"hex":"#f4502a","idx":0,"$$hashKey":"object:176"},{"hex":"#f1c227","idx":1,"$$hashKey":"object:177"},{"hex":"#008a6d","idx":2,"$$hashKey":"object:178"},{"hex":"#00acdb","idx":3,"$$hashKey":"object:179"},{"hex":"#0064a8","idx":4,"$$hashKey":"object:180"}]},"default":{"colors":[{"hex":"#f4502a"},{"hex":"#f1c227"},{"hex":"#008a6d"},{"hex":"#00acdb"},{"hex":"#0064a8"}]},"category":"Global Settings","rebindOnChange":true},"fontSize":{"name":"Font Size","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"12","default":13,"category":"Global Settings"},"textFill":{"name":"Text Color","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#000000","default":"#000000","category":"Global Settings"},"background":{"name":"Background","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#ffffff","default":"#ffffff","category":"Global Settings"},"fontFamily":{"name":"Font","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"Arial","default":"Arial","category":"Global Settings"},"otherLabel":{"name":"Label for 'other'","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"Other","default":"Other","category":"Label"},"otherLimit":{"desc":"Data smaller than this value will be clustered into one set of data","name":"Small Data Threshold","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":0,"default":0,"category":"Value"},"fillOpacity":{"name":"Fill Opacity","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"0.45","default":0.6,"category":"Global Settings"}},"library":["d3/3.5.12/min","plotd3/0.1.0"],"local":null,"inherit":[],"metashow":null,"footer":null},"dimension":{"src":{"type":[],"require":true,"desc":"source","fields":[{"name":"Source Continent","data":["Asia","Asia","Asia","Asia","Asia","Asia","Europe","Europe","Europe","Europe","Europe","Europe","America","America","America","America","America","America","Oceania","Oceania","Oceania","Oceania","Oceania","Oceania","Australia","Australia","Australia","Australia","Australia","Australia","Africa","Africa","Africa","Africa","Africa","Africa"],"datatype":"String","bind":"src"}],"fieldName":["Source Continent"]},"des":{"type":[],"require":true,"desc":"target","fields":[{"name":"Target Continent","data":["Asia","Europe","America","Oceania","Australia","Africa","Asia","Europe","America","Oceania","Australia","Africa","Asia","Europe","America","Oceania","Australia","Africa","Asia","Europe","America","Oceania","Australia","Africa","Asia","Europe","America","Oceania","Australia","Africa","Asia","Europe","America","Oceania","Australia","Africa"],"datatype":"String","bind":"des"}],"fieldName":["Target Continent"]},"value":{"type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"require":true,"desc":"amount of flow","fields":[{"name":"Value","data":[18,54,33,35,12,38,84,41,85,73,67,56,55,35,89,98,41,88,15,29,50,24,22,91,50,71,19,59,72,47,99,22,25,57,97,42],"datatype":"Number","bind":"value"}],"fieldName":["Value"]}},"animate":{"running":false,"last":0},"config":{"value":{"fontFamily":{"name":"Font","type":[{"default":"","name":"EditableChoice","level":20,"values":["Arial","Helvetica","Tahoma","Consolas","Century Gothic","Courier New"]}],"default":"Arial","category":"Global Settings","value":"Arial"},"background":{"name":"Background","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#ffffff","category":"Global Settings","value":"#ffffff"},"textFill":{"name":"Text Color","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#000000","category":"Global Settings","value":"#000000"},"fillOpacity":{"name":"Fill Opacity","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":0.6,"category":"Global Settings","value":0.45},"fontSize":{"name":"Font Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":13,"category":"Global Settings","value":12},"padding":{"name":"Padding","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":10,"category":"Global Settings","value":10},"margin":{"name":"Margin","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":10,"category":"Global Settings","min":0,"max":20,"value":5},"palette":{"rebindOnChange":true,"name":"Palette","type":[{"name":"Palette","level":30,"re":{},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]},"qualitative":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]},"binary":{"colors":[{"hex":"#ff8356"},{"hex":"#0076a1"}]},"sequential":{"colors":[{"hex":"#950431"},{"hex":"#be043e"},{"hex":"#ec326d"},{"hex":"#fc82a9"},{"hex":"#febed2"},{"hex":"#fee6ee"}]},"diverging":{"colors":[{"hex":"#74001a"},{"hex":"#cd2149"},{"hex":"#f23971"},{"hex":"#ff84ab"},{"hex":"#ffc3d7"},{"hex":"#f2f2dd"},{"hex":"#b8d9ed"},{"hex":"#81b1d0"},{"hex":"#3d8bb7"},{"hex":"#0071a8"},{"hex":"#003558"}]},"subtype":{"qualitative":"qualitative","binary":"binary","sequential":"sequential","diverging":"diverging"},"scale":{}}],"default":{"colors":[{"hex":"#f4502a"},{"hex":"#f1c227"},{"hex":"#008a6d"},{"hex":"#00acdb"},{"hex":"#0064a8"}]},"category":"Global Settings","value":{"colors":[{"hex":"#f4502a","idx":0,"$$hashKey":"object:176"},{"hex":"#f1c227","idx":1,"$$hashKey":"object:177"},{"hex":"#008a6d","idx":2,"$$hashKey":"object:178"},{"hex":"#00acdb","idx":3,"$$hashKey":"object:179"},{"hex":"#0064a8","idx":4,"$$hashKey":"object:180"}]}},"otherLabel":{"name":"Label for 'other'","type":[{"name":"String","default":"","level":2,"basetype":[]}],"default":"Other","category":"Label","value":"Other"},"otherLimit":{"name":"Small Data Threshold","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"desc":"Data smaller than this value will be clustered into one set of data","default":0,"category":"Value","value":0},"thick":{"name":"Bar Thickness","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":10,"value":20}},"group":{"Global Settings":{"fontFamily":{"name":"Font","type":[{"default":"","name":"EditableChoice","level":20,"values":["Arial","Helvetica","Tahoma","Consolas","Century Gothic","Courier New"]}],"default":"Arial","category":"Global Settings","value":"Arial"},"background":{"name":"Background","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#ffffff","category":"Global Settings","value":"#ffffff"},"textFill":{"name":"Text Color","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#000000","category":"Global Settings","value":"#000000"},"fillOpacity":{"name":"Fill Opacity","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":0.6,"category":"Global Settings","value":0.45},"fontSize":{"name":"Font Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":13,"category":"Global Settings","value":12},"padding":{"name":"Padding","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":10,"category":"Global Settings","value":10},"margin":{"name":"Margin","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":10,"category":"Global Settings","min":0,"max":20,"value":5},"palette":{"rebindOnChange":true,"name":"Palette","type":[{"name":"Palette","level":30,"re":{},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]},"qualitative":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]},"binary":{"colors":[{"hex":"#ff8356"},{"hex":"#0076a1"}]},"sequential":{"colors":[{"hex":"#950431"},{"hex":"#be043e"},{"hex":"#ec326d"},{"hex":"#fc82a9"},{"hex":"#febed2"},{"hex":"#fee6ee"}]},"diverging":{"colors":[{"hex":"#74001a"},{"hex":"#cd2149"},{"hex":"#f23971"},{"hex":"#ff84ab"},{"hex":"#ffc3d7"},{"hex":"#f2f2dd"},{"hex":"#b8d9ed"},{"hex":"#81b1d0"},{"hex":"#3d8bb7"},{"hex":"#0071a8"},{"hex":"#003558"}]},"subtype":{"qualitative":"qualitative","binary":"binary","sequential":"sequential","diverging":"diverging"},"scale":{}}],"default":{"colors":[{"hex":"#f4502a"},{"hex":"#f1c227"},{"hex":"#008a6d"},{"hex":"#00acdb"},{"hex":"#0064a8"}]},"category":"Global Settings","value":{"colors":[{"hex":"#f4502a","idx":0,"$$hashKey":"object:176"},{"hex":"#f1c227","idx":1,"$$hashKey":"object:177"},{"hex":"#008a6d","idx":2,"$$hashKey":"object:178"},{"hex":"#00acdb","idx":3,"$$hashKey":"object:179"},{"hex":"#0064a8","idx":4,"$$hashKey":"object:180"}]}}},"Label":{"otherLabel":{"name":"Label for 'other'","type":[{"name":"String","default":"","level":2,"basetype":[]}],"default":"Other","category":"Label","value":"Other"}},"Value":{"otherLimit":{"name":"Small Data Threshold","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"desc":"Data smaller than this value will be clustered into one set of data","default":0,"category":"Value","value":0}},"Other":{"thick":{"name":"Bar Thickness","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":10,"value":20}}}},"data":{"data":[{"name":"Source Continent","data":["Asia","Asia","Asia","Asia","Asia","Asia","Europe","Europe","Europe","Europe","Europe","Europe","America","America","America","America","America","America","Oceania","Oceania","Oceania","Oceania","Oceania","Oceania","Australia","Australia","Australia","Australia","Australia","Australia","Africa","Africa","Africa","Africa","Africa","Africa"],"datatype":"String","bind":"src"},{"name":"Target Continent","data":["Asia","Europe","America","Oceania","Australia","Africa","Asia","Europe","America","Oceania","Australia","Africa","Asia","Europe","America","Oceania","Australia","Africa","Asia","Europe","America","Oceania","Australia","Africa","Asia","Europe","America","Oceania","Australia","Africa","Asia","Europe","America","Oceania","Australia","Africa"],"datatype":"String","bind":"des"},{"name":"Value","data":[18,54,33,35,12,38,84,41,85,73,67,56,55,35,89,98,41,88,15,29,50,24,22,91,50,71,19,59,72,47,99,22,25,57,97,42],"datatype":"Number","bind":"value"}]},"library":{"hash":{"plotd3/0.1.0":"blob:https://plotdb.com/b97f79d7-9160-410a-838a-3039122151d6","d3/3.5.12/min":"blob:https://plotdb.com/57add4c3-ad2d-4664-9724-2a1722f967ff"}},"promise":{"sample":null}}