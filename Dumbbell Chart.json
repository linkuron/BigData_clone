{"src":"{\"ownername\":\"plotdb\",\"key\":980,\"name\":\"Dumbbell Chart\",\"owner\":4,\"theme\":null,\"parent\":null,\"description\":\"given two variable, focus on showing the gap between them\",\"basetype\":[\"1\",\"2\"],\"visualencoding\":[\"1\",\"3\",\"9\"],\"category\":[\"4\",\"5\"],\"tags\":[\"dumbbell\",\"difference\",\"change\",\"compare\"],\"likes\":2,\"searchable\":true,\"dimlen\":4,\"createdtime\":\"2016-03-13T08:26:49.000Z\",\"modifiedtime\":\"2017-01-07T23:32:34.000Z\",\"doc\":{\"name\":\"document\",\"size\":0,\"type\":\"html\",\"lines\":1,\"content\":\"\"},\"style\":{\"name\":\"stylesheet\",\"size\":48,\"type\":\"css\",\"lines\":3,\"content\":\"circle.data, line.connect {\\n  stroke-width: 2;\\n}\"},\"code\":{\"name\":\"code\",\"size\":13384,\"type\":\"javascript\",\"lines\":303,\"content\":\"{\\n  sample: function() {\\n    var count = 20;\\n    var value1 = [{name: \\\"Last Year\\\", data: d3.range(count).map(function() { return Math.random() * 1.5 + 1; })}];\\n    var value2 = [{name: \\\"This Year\\\", data: d3.range(count).map(function() { return Math.random() * 1 + 1.5; })}];\\n    var name = [{name: \\\"Name\\\", data: d3.range(count).map(function(it) { return plotdb.data.sample.name[it % plotdb.data.sample.name.length]; })}];\\n    var category = [{name: \\\"Dept.\\\",\\n      data: d3.range(count).map(function(it) { return plotdb.data.sample.category[it % plotdb.data.sample.category.length]; })}];\\n    return {\\n      value1: value1, value2: value2, name: name, category: category\\n    };\\n  },\\n  dimension: {\\n    value1: { type: [plotdb.Number], require: true, desc: \\\"value 1\\\" },\\n    value2: { type: [plotdb.Number], require: true, desc: \\\"value 2\\\" },\\n    name: { type: [], require: true, desc: \\\"value name\\\"},\\n    category: { type: [], require: false, desc: \\\"category\\\"}\\n  },\\n  config: {\\n    fontFamily: {},\\n    background: {},\\n    textFill: {},\\n    fontSize: {},\\n    margin: {},\\n    padding: {},\\n    palette: {},\\n    gridShow: {},\\n    gridStroke: {},\\n    gridStrokeWidth: {},\\n    gridDashArray: {},\\n    nodeShow: {},\\n    nodeSize: {},\\n    xAxisShow: {},\\n    xAxisLabel: {},\\n    xAxisTickSizeInner: {},\\n    xAxisTickSizeOuter: {},\\n    xAxisTickPadding: {},\\n    xAxisShowDomain: {default: true},\\n    xAxisTickCount: {},\\n    xAxisLabelPosition: {},\\n    xAxisStroke: {},\\n    sort: { type: [plotdb.Choice([\\\"None\\\", \\\"Category\\\", \\\"Value1\\\", \\\"Value2\\\", \\\"Length\\\"])], default: \\\"None\\\", rebindOnChange: true },\\n    value1: { name: \\\"Old Value\\\", type: [plotdb.Color], default: \\\"#940\\\",\\n            hint: plotdb.Color.subtype.positive},\\n    value2: { name: \\\"New Value\\\", type: [plotdb.Color], default: \\\"#049\\\",\\n            hint: plotdb.Color.subtype.negative},\\n    value1Label: { name: \\\"Old Label\\\", type: [plotdb.String], default: \\\"\\\" },\\n    value2Label: { name: \\\"New Label\\\", type: [plotdb.String], default: \\\"\\\" },\\n    popupShow: {},\\n    unit: {}\\n  },\\n  init: function() {\\n    var that = this;\\n    this.svg = d3.select(this.root).append(\\\"svg\\\");\\n    this.yAxisGroup = this.svg.append(\\\"g\\\").attr({class: \\\"axis vertical\\\"});\\n    this.xAxisGroup = this.svg.append(\\\"g\\\").attr({class: \\\"axis horizontal\\\"});\\n    this.gridGroup = this.svg.append(\\\"g\\\").attr({class: \\\"grid-group\\\"});\\n    this.legendGroup = this.svg.append(\\\"g\\\").attr({class: \\\"legend-group\\\"});\\n    this.tooltip = plotd3.html.tooltip(this.root).on(\\\"mouseover\\\", function(d,i,popup) {\\n      var u = \\\" \\\" + (that.config.unit || \\\"\\\");\\n      popup.select(\\\".title\\\").text(d.name);\\n      popup.select(\\\".value\\\").text(\\n        (Math.round(100 * d.value1)/100) + u + \\\" \\\\u279d \\\" + (Math.round(100 * d.value2)/100)  + u\\n      );\\n    });\\n  },\\n  parse: function() {\\n    var that = this;\\n    if(this.config.sort == \\\"Value1\\\") {\\n      this.data.sort(function(a,b) { return b.value1 - a.value1; });\\n    } else if(this.config.sort == \\\"Value2\\\") {\\n      this.data.sort(function(a,b) { return b.value2 - a.value2; });\\n    } else if(this.config.sort == \\\"Category\\\" && this.dimension.category.fields.length) {\\n      this.data.sort(function(a,b) {\\n        if(a.category > b.category) return -1;\\n        if(b.category > a.category) return 1;\\n        return 0;\\n      });\\n    } else if(this.config.sort == \\\"Length\\\") {\\n      this.data.sort(function(a,b) {\\n        return (b.value2 - b.value1) - (a.value2 - a.value1);\\n      });\\n    }\\n    this.indexes = this.data.map(function(d,i) { return d.idx = i; });\\n    this.values = this.data.map(function(it) { return [it.value1, it.value2]; }).reduce(function(a,b) { return a.concat(b); }, []);\\n    this.valuerange = d3.extent(this.values);\\n    if(!this.valuerange[0]) this.valuerange[0] = 0;\\n    if(!this.valuerange[1]) this.valuerange[1] = 1;\\n    this.catrange = d3.map(this.data, function(it) { return it.category || \\\"\\\"; }).keys().filter(function(it) { return it.length; });\\n    this.nameMaxLen = d3.max(this.data.map(function(it) { return (it.name || \\\"\\\").length; }));\\n    this.catmap = this.data.map(function(d,i) { return [d.category, i]; });\\n    this.catextent = [];\\n    for(var i = 0; i < this.catrange.length; i++) {\\n      var list = this.catmap.filter(function(it) {  return it[0] == that.catrange[i]; });\\n      this.catextent.push([this.catrange[i], list[0][1], list[list.length - 1][1]]);\\n    }\\n  },\\n  bind: function() {\\n    var that = this,sel;\\n    sel = this.svg.selectAll(\\\"g.data-group\\\").data(this.data);\\n    sel.exit().remove();\\n    sel = sel.enter().append(\\\"g\\\").attr({class: \\\"data-group\\\"})\\n    .each(function(d,i) {\\n      var node = d3.select(this);\\n      node.append(\\\"line\\\").attr({class: \\\"connect\\\", opacity: 1});\\n      node.append(\\\"circle\\\").attr({class: \\\"data value1\\\", opacity: 1}).on(\\\"mouseover\\\", function() {\\n        that.activeGroup = 1; that.render(); \\n      }).on(\\\"mouseout\\\", function() { that.activeGroup = 0; that.render(); });\\n      node.append(\\\"circle\\\").attr({class: \\\"data value2\\\", opacity: 1}).on(\\\"mouseover\\\", function() {\\n        that.activeGroup = 2; that.render(); \\n      }).on(\\\"mouseout\\\", function() { that.activeGroup = 0; that.render(); });\\n    });\\n    if(this.config.popupShow) this.tooltip.nodes(sel.selectAll(\\\"circle\\\"));\\n    sel = this.svg.selectAll(\\\"g.category\\\").data(this.catextent);\\n    sel.exit().remove();\\n    sel.enter().append(\\\"g\\\").attr({class: \\\"category\\\"}).each(function(d,i) {\\n      var node = d3.select(this);\\n      node.append(\\\"line\\\");\\n      node.append(\\\"text\\\");\\n    });\\n    this.svg.selectAll(\\\"g.category\\\").each(function(d,i) {\\n      var node = d3.select(this);\\n      node.select(\\\"line\\\").datum(d); node.select(\\\"text\\\").datum(d);\\n    });\\n  },\\n  resize: function() {\\n    var that = this;\\n    var box = this.root.getBoundingClientRect();\\n    var svgbox = this.svg[0][0].getBoundingClientRect();\\n    var width = this.width = box.width;\\n    this.xAxisHeight = this.config.fontSize * 2;\\n    var height = (this.config.fontSize * 1.5 + 10 + this.config.padding )* this.data.length + this.xAxisHeight + that.config.margin * 2;\\n    height = (box.height - svgbox.top > height - svgbox.top ? box.height - svgbox.top - 3: height - svgbox.top - 3);\\n    this.height = height;\\n    this.svg.attr({\\n      width: width + \\\"px\\\", height: height + \\\"px\\\",\\n      viewBox: [0,0,width,height].join(\\\" \\\"),\\n      preserveAspectRatio: \\\"xMidYMid\\\"\\n    });\\n    this.tooltip.fontSize(this.config.fontSize);\\n    var legendScale = d3.scale.ordinal()\\n      .domain([\\n        this.config.value1Label || this.dimension.value1.fieldName || \\\"before\\\",\\n        this.config.value2Label || this.dimension.value2.fieldName || \\\"after\\\"])\\n      .range([this.config.value1, this.config.value2]);\\n    this.legend = plotd3.rwd.legend().orient(\\\"top\\\").scale(legendScale).fontSize(this.config.fontSize);\\n    this.legendGroup.call(this.legend);\\n    this.legendSize = this.legend.offset();\\n    this.legendSize[1] += this.config.fontSize;\\n    this.legendGroup.selectAll(\\\".legend\\\").on(\\\"mouseover\\\", function(d,i) {\\n      that.activeGroup = i + 1;\\n      that.render();\\n    }).on(\\\"mouseout\\\", function(d,i) {\\n      that.activeGroup = null;\\n      that.render();\\n    });\\n    var rate = this.config.padding / (this.config.fontSize * 1.5 + 10 + this.config.padding);\\n    this.yScale = d3.scale.ordinal()\\n      .domain(this.indexes)\\n      .rangePoints([\\n        this.xAxisHeight + this.legendSize[1] + this.config.margin + this.config.fontSize,\\n        this.height - this.config.margin - this.config.fontSize\\n      ], rate, rate);\\n    this.yAxis = plotd3.rwd.axis()\\n      .orient(\\\"left\\\")\\n      .scale(this.yScale)\\n      .ticks(0)\\n      .fontSize(this.config.fontSize)\\n    .tickFormat(function(it) { \\n      return that.data[it].name; \\n    });\\n    this.yAxisGroup.call(this.yAxis);\\n    this.yAxisGroup.selectAll(\\\".tick line\\\").remove();\\n    this.yAxisGroup.selectAll(\\\".domain\\\").remove();\\n    this.yAxisWidth = this.yAxis.offset();\\n    this.xScale = d3.scale.linear().domain(this.valuerange).range([\\n      this.yAxisWidth + this.config.margin + 2 * this.config.fontSize, width - this.config.margin - this.config.fontSize * 0.5\\n    ]);\\n    this.xAxis = plotd3.rwd.axis()\\n      .orient(\\\"top\\\")\\n      .scale(this.xScale)\\n      .label(this.config.xAxisLabel || \\\"\\\")\\n      .labelPosition(this.config.xAxisLabelPosition)\\n      .ticks(this.config.xAxisTickCount)\\n      .tickSize(this.config.xAxisTickSizeInner, this.config.xAxisTickSizeOuter)\\n      .tickPadding(this.config.xAxisTickPadding)\\n      .fontSize(this.config.fontSize);\\n    this.xAxisGroup.call(this.xAxis);\\n    var ticks = this.xAxis.tickValues();\\n    var update = this.gridGroup.selectAll(\\\"line.grid.vertical\\\").data(ticks);\\n    update.exit().remove();\\n    update.enter().append(\\\"line\\\").attr({class: \\\"grid vertical\\\"});\\n    this.cscale = plotdb.Palette.scale.ordinal(this.config.palette);\\n  },\\n  render: function() {\\n    var that = this;\\n    var maxWidth = 0;\\n    if(this.config.fontFamily) d3.select(this.root).style(\\\"font-family\\\", this.config.fontFamily);\\n    d3.select(this.root).style(\\\"background-color\\\", this.config.background);\\n    this.svg.selectAll(\\\"text\\\").attr({\\n      \\\"font-size\\\": that.config.fontSize,\\n      \\\"fill\\\": that.config.textFill\\n    });\\n    this.legendGroup.attr({ transform: [\\n      \\\"translate(\\\", (this.width - this.legendSize[0])/2, this.config.margin, \\\")\\\"\\n    ].join(\\\" \\\")});\\n    this.yAxisGroup.attr({\\n      transform: \\\"translate(\\\" + (this.yAxisWidth + this.config.margin) +\\\",0)\\\"\\n    });\\n    this.svg.selectAll(\\\"text\\\").attr({\\n      \\\"font-size\\\": that.config.fontSize\\n    });\\n    this.svg.selectAll(\\\"line.grid.vertical\\\").attr({\\n      y1: this.xAxisHeight + this.config.margin + this.legendSize[1],\\n      y2: that.height - that.config.margin,\\n      x1: function(it) { return that.xScale(it); },\\n      x2: function(it) { return that.xScale(it); },\\n      stroke: this.config.gridStroke,\\n      \\\"stroke-width\\\": this.config.gridStrokeWidth,\\n      \\\"stroke-dasharray\\\": this.config.gridDashArray,\\n      display: (this.config.gridShow ? \\\"block\\\" : \\\"none\\\")\\n    });\\n    this.xAxisGroup.attr({\\n      transform: \\\"translate(0,\\\"+ ( this.xAxisHeight + this.config.margin + this.legendSize[1]) + \\\")\\\",\\n      display: this.config.xAxisShow ? \\\"block\\\" : \\\"none\\\"\\n    });\\n    this.xAxisGroup.selectAll(\\\".domain\\\").attr({display: (this.config.xAxisShowDomain ? \\\"block\\\" : \\\"none\\\")});\\n    this.xAxisGroup.selectAll(\\\"path,line\\\").attr({ stroke: that.config.xAxisStroke });\\n    this.svg.selectAll(\\\"g.data-group\\\").attr({\\n      transform: function(d,i) {\\n        return [\\n          \\\"translate(\\\",\\n          0,\\n          \\\",\\\",\\n          that.yScale(d.idx),\\n          \\\")\\\"\\n        ].join(\\\"\\\");\\n      }\\n    }).each(function(d,i) {\\n      var node = d3.select(this);\\n      node.selectAll(\\\"circle\\\").attr({\\n        r: that.config.nodeSize / 2,\\n        display: (that.config.nodeShow ? \\\"block\\\" : \\\"none\\\")\\n      });      node.select(\\\"circle.value1\\\").attr({\\n        fill: that.config.value1,\\n        stroke: that.config.value1      \\n      }).transition(\\\"morph\\\").duration(500).attr({\\n        cx: function(it) { return that.xScale(it.value1); },\\n        cy: 0,\\n      });\\n      node.select(\\\"circle.value1\\\").transition().attr({\\n        opacity: function() { if(!that.activeGroup || that.activeGroup == 1) return 1; else return 0.1; }\\n      });\\n      node.select(\\\"circle.value2\\\").attr({\\n        fill: that.config.value2,\\n        stroke: that.config.value2\\n      }).transition(\\\"morph\\\").duration(500).attr({\\n        cx: function(it) { return that.xScale(it.value2); },\\n        cy: 0,\\n      });\\n      node.select(\\\"circle.value2\\\").transition().attr({\\n        opacity: function() { if(!that.activeGroup || that.activeGroup == 2) return 1; else return 0.1; }\\n      });\\n      node.select(\\\"line\\\").attr({\\n        stroke: function(it) {\\n          return (it.value1 > it.value2 ? that.config.value1 : that.config.value2 )\\n        }\\n      }).transition(\\\"morph\\\").duration(500).attr({\\n        x1: function(it) { return that.xScale(it.value1); },\\n        x2: function(it) { return that.xScale(it.value2); },\\n        y1: 0, y2: 0,\\n      });\\n      node.select(\\\"line\\\").transition(\\\"opacity\\\").duration(500).attr({\\n        opacity: function(d) {\\n          var v = ((d.value1 - d.value2)>=0 ? 1 : 2);\\n          if(!that.activeGroup || that.activeGroup == v) return 1; else return 0.1;\\n        }\\n      });\\n    });\\n    this.svg.selectAll(\\\"g.category line\\\").attr({\\n      x1: that.yAxisWidth + that.config.margin + 1 + that.config.fontSize / 2,\\n      x2: that.yAxisWidth + that.config.margin + 1 + that.config.fontSize / 2,\\n      y1: function(d,i) { return that.yScale(d[1]) - that.config.fontSize; },\\n      y2: function(d,i) { return that.yScale(d[2]) + that.config.fontSize; },\\n      stroke: function(d,i) { return that.cscale(d[0]); },\\n      \\\"stroke-width\\\": that.config.fontSize + 2\\n    }).style({\\n      display: (this.config.sort == \\\"Category\\\" && this.dimension.category.fields.length ? \\\"block\\\" : \\\"none\\\")\\n    });\\n    this.svg.selectAll(\\\"g.category text\\\").attr({\\n      x: that.yAxisWidth + that.config.margin + 1 + that.config.fontSize / 2,\\n      y: function(d,i) { return that.yScale(d[1]) - that.config.fontSize * 0.5; },\\n      \\\"writing-mode\\\": \\\"tb\\\",\\n      \\\"font-size\\\": 0.8 * that.config.fontSize,\\n      fill: function(d,i) {\\n        var c = d3.hsl(that.cscale(d[0]));\\n        return (c.l > 0.7 ? \\\"#000\\\" : \\\"#fff\\\");\\n      },\\n    }).style({\\n      display: (this.config.sort == \\\"Category\\\" && this.dimension.category.fields.length ? \\\"block\\\" : \\\"none\\\")\\n    }).text(function(d,i) { return d[0]; });\\n  }\\n}\"},\"assets\":[],\"dimension\":{\"name\":{\"desc\":\"value name\",\"type\":[],\"fields\":[],\"require\":true},\"value1\":{\"desc\":\"value 1\",\"type\":[\"Number\"],\"fields\":[],\"require\":true},\"value2\":{\"desc\":\"value 2\",\"type\":[\"Number\"],\"fields\":[],\"require\":true},\"category\":{\"desc\":\"category\",\"type\":[],\"fields\":[],\"require\":false}},\"config\":{\"sort\":{\"name\":\"Sort data\",\"type\":[{\"name\":\"Choice\",\"level\":20,\"values\":[\"None\",\"Category\",\"Value1\",\"Value2\",\"Length\"],\"default\":\"\"}],\"value\":\"Value1\",\"default\":\"None\",\"category\":\"Value\",\"rebindOnChange\":true},\"unit\":{\"desc\":\"Unit of value\",\"name\":\"Unit\",\"type\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}],\"value\":\"\",\"default\":\"\",\"category\":\"Value\"},\"margin\":{\"name\":\"Margin\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":\"20\",\"default\":10,\"category\":\"Global Settings\"},\"value1\":{\"hint\":\"positive\",\"name\":\"Old Value\",\"type\":[{\"Gray\":\"#cccccc\",\"name\":\"Color\",\"Empty\":\"#ffffff\",\"level\":10,\"Neutral\":\"#cccccc\",\"default\":\"#dc4521\",\"subtype\":{\"neutral\":\"neutral\",\"negative\":\"negative\",\"positive\":\"positive\"},\"Negative\":\"#d93510\",\"Positive\":\"#3f7ab5\"}],\"value\":\"#d10303\",\"default\":\"#940\"},\"value2\":{\"hint\":\"negative\",\"name\":\"New Value\",\"type\":[{\"Gray\":\"#cccccc\",\"name\":\"Color\",\"Empty\":\"#ffffff\",\"level\":10,\"Neutral\":\"#cccccc\",\"default\":\"#dc4521\",\"subtype\":{\"neutral\":\"neutral\",\"negative\":\"negative\",\"positive\":\"positive\"},\"Negative\":\"#d93510\",\"Positive\":\"#3f7ab5\"}],\"value\":\"#31679d\",\"default\":\"#049\"},\"padding\":{\"name\":\"Padding\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":\"10\",\"default\":10,\"category\":\"Global Settings\"},\"palette\":{\"name\":\"Palette\",\"type\":[{\"re\":{},\"name\":\"Palette\",\"level\":30,\"scale\":{},\"binary\":{\"colors\":[{\"hex\":\"#ff8356\"},{\"hex\":\"#0076a1\"}]},\"plotdb\":{\"colors\":[{\"hex\":\"#ed1d78\"},{\"hex\":\"#c59b6d\"},{\"hex\":\"#8cc63f\"},{\"hex\":\"#28aae2\"}]},\"default\":{\"colors\":[{\"hex\":\"#1d3263\"},{\"hex\":\"#226c87\"},{\"hex\":\"#f8d672\"},{\"hex\":\"#e48e11\"},{\"hex\":\"#e03215\"},{\"hex\":\"#ab2321\"}]},\"subtype\":{\"binary\":\"binary\",\"diverging\":\"diverging\",\"sequential\":\"sequential\",\"qualitative\":\"qualitative\"},\"diverging\":{\"colors\":[{\"hex\":\"#74001a\"},{\"hex\":\"#cd2149\"},{\"hex\":\"#f23971\"},{\"hex\":\"#ff84ab\"},{\"hex\":\"#ffc3d7\"},{\"hex\":\"#f2f2dd\"},{\"hex\":\"#b8d9ed\"},{\"hex\":\"#81b1d0\"},{\"hex\":\"#3d8bb7\"},{\"hex\":\"#0071a8\"},{\"hex\":\"#003558\"}]},\"sequential\":{\"colors\":[{\"hex\":\"#950431\"},{\"hex\":\"#be043e\"},{\"hex\":\"#ec326d\"},{\"hex\":\"#fc82a9\"},{\"hex\":\"#febed2\"},{\"hex\":\"#fee6ee\"}]},\"qualitative\":{\"colors\":[{\"hex\":\"#c05ae0\"},{\"hex\":\"#cf2d0c\"},{\"hex\":\"#e9ab1e\"},{\"hex\":\"#86ffb5\"},{\"hex\":\"#64dfff\"},{\"hex\":\"#003f7d\"}]}}],\"value\":{\"colors\":[{\"hex\":\"#1d3263\"},{\"hex\":\"#226c87\"},{\"hex\":\"#f8d672\"},{\"hex\":\"#e48e11\"},{\"hex\":\"#e03215\"},{\"hex\":\"#ab2321\"}]},\"default\":{\"colors\":[{\"hex\":\"#f4502a\"},{\"hex\":\"#f1c227\"},{\"hex\":\"#008a6d\"},{\"hex\":\"#00acdb\"},{\"hex\":\"#0064a8\"}]},\"category\":\"Global Settings\"},\"fontSize\":{\"name\":\"Font Size\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":\"12\",\"default\":13,\"category\":\"Global Settings\"},\"gridShow\":{\"name\":\"Show Grid\",\"type\":[{\"name\":\"Boolean\",\"level\":8,\"order\":{},\"default\":true,\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}],\"value\":true,\"default\":true,\"category\":\"Grid\"},\"nodeShow\":{\"name\":\"Show Data Dot\",\"type\":[{\"name\":\"Boolean\",\"level\":8,\"order\":{},\"default\":true,\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}],\"value\":true,\"default\":true,\"category\":\"Dot\"},\"nodeSize\":{\"name\":\"Dot Size\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":\"12\",\"default\":6,\"category\":\"Dot\"},\"textFill\":{\"name\":\"Text Color\",\"type\":[{\"Gray\":\"#cccccc\",\"name\":\"Color\",\"Empty\":\"#ffffff\",\"level\":10,\"Neutral\":\"#cccccc\",\"default\":\"#dc4521\",\"subtype\":{\"neutral\":\"neutral\",\"negative\":\"negative\",\"positive\":\"positive\"},\"Negative\":\"#d93510\",\"Positive\":\"#3f7ab5\"}],\"value\":\"#000000\",\"default\":\"#000000\",\"category\":\"Global Settings\"},\"popupShow\":{\"desc\":\"show Popup when user hovers over elements\",\"name\":\"show Popup\",\"type\":[{\"name\":\"Boolean\",\"level\":8,\"order\":{},\"default\":true,\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}],\"value\":true,\"default\":true,\"category\":\"Popup\",\"rebindOnChange\":true},\"xAxisShow\":{\"name\":\"Show Axis\",\"type\":[{\"name\":\"Boolean\",\"level\":8,\"order\":{},\"default\":true,\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}],\"value\":true,\"default\":true,\"category\":\"X Axis\"},\"background\":{\"name\":\"Background\",\"type\":[{\"Gray\":\"#cccccc\",\"name\":\"Color\",\"Empty\":\"#ffffff\",\"level\":10,\"Neutral\":\"#cccccc\",\"default\":\"#dc4521\",\"subtype\":{\"neutral\":\"neutral\",\"negative\":\"negative\",\"positive\":\"positive\"},\"Negative\":\"#d93510\",\"Positive\":\"#3f7ab5\"}],\"value\":\"#ffffff\",\"default\":\"#ffffff\",\"category\":\"Global Settings\"},\"fontFamily\":{\"name\":\"Font\",\"type\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}],\"value\":\"Arial\",\"default\":\"Arial\",\"category\":\"Global Settings\"},\"gridStroke\":{\"name\":\"Color\",\"type\":[{\"Gray\":\"#cccccc\",\"name\":\"Color\",\"Empty\":\"#ffffff\",\"level\":10,\"Neutral\":\"#cccccc\",\"default\":\"#dc4521\",\"subtype\":{\"neutral\":\"neutral\",\"negative\":\"negative\",\"positive\":\"positive\"},\"Negative\":\"#d93510\",\"Positive\":\"#3f7ab5\"}],\"value\":\"#cccccc\",\"default\":\"#ccc\",\"category\":\"Grid\"},\"xAxisLabel\":{\"name\":\"Label\",\"type\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}],\"value\":\"\",\"default\":\"\",\"category\":\"X Axis\"},\"value1Label\":{\"name\":\"Old Label\",\"type\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}],\"value\":\"\",\"default\":\"\"},\"value2Label\":{\"name\":\"New Label\",\"type\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}],\"value\":\"\",\"default\":\"\"},\"xAxisStroke\":{\"name\":\"Stroke Color\",\"type\":[{\"Gray\":\"#cccccc\",\"name\":\"Color\",\"Empty\":\"#ffffff\",\"level\":10,\"Neutral\":\"#cccccc\",\"default\":\"#dc4521\",\"subtype\":{\"neutral\":\"neutral\",\"negative\":\"negative\",\"positive\":\"positive\"},\"Negative\":\"#d93510\",\"Positive\":\"#3f7ab5\"}],\"value\":\"#000000\",\"default\":\"#000\",\"category\":\"X Axis\"},\"gridDashArray\":{\"desc\":\"SVG style dash array. '2 4' means 2px line and 4px space.\",\"name\":\"Dash Style\",\"type\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}],\"value\":\"2 4\",\"default\":\"2 4\",\"category\":\"Grid\"},\"xAxisTickCount\":{\"desc\":\"Hint on number of tick. Actual number will be decided by program\",\"name\":\"Tick Count\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":\"6\",\"default\":6,\"category\":\"X Axis\"},\"gridStrokeWidth\":{\"name\":\"Stroke Width\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":1,\"default\":1,\"category\":\"Grid\"},\"xAxisShowDomain\":{\"name\":\"Show Basline\",\"type\":[{\"name\":\"Boolean\",\"level\":8,\"order\":{},\"default\":true,\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}],\"value\":true,\"default\":true,\"category\":\"X Axis\"},\"xAxisTickPadding\":{\"name\":\"Tick Padding\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":4,\"default\":4,\"category\":\"X Axis\"},\"xAxisLabelPosition\":{\"name\":\"Label Position\",\"type\":[{\"name\":\"Choice\",\"level\":20,\"values\":[\"in\",\"center\"],\"default\":\"\"}],\"value\":\"center\",\"default\":\"center\",\"category\":\"X Axis\"},\"xAxisTickSizeInner\":{\"name\":\"Inner Tick Size\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":4,\"default\":4,\"category\":\"X Axis\"},\"xAxisTickSizeOuter\":{\"name\":\"Outer Tick Size\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":0,\"default\":0,\"category\":\"X Axis\"}},\"library\":[\"d3/3.5.12/min\",\"plotd3/0.1.0\"],\"local\":null,\"inherit\":[],\"metashow\":false,\"footer\":null}","obj":{"ownername":"plotdb","key":980,"name":"Dumbbell Chart","owner":4,"theme":null,"parent":null,"description":"given two variable, focus on showing the gap between them","basetype":["1","2"],"visualencoding":["1","3","9"],"category":["4","5"],"tags":["dumbbell","difference","change","compare"],"likes":2,"searchable":true,"dimlen":4,"createdtime":"2016-03-13T08:26:49.000Z","modifiedtime":"2017-01-07T23:32:34.000Z","doc":{"name":"document","size":0,"type":"html","lines":1,"content":""},"style":{"name":"stylesheet","size":48,"type":"css","lines":3,"content":"circle.data, line.connect {\n  stroke-width: 2;\n}"},"code":{"name":"code","size":13384,"type":"javascript","lines":303,"content":"{\n  sample: function() {\n    var count = 20;\n    var value1 = [{name: \"Last Year\", data: d3.range(count).map(function() { return Math.random() * 1.5 + 1; })}];\n    var value2 = [{name: \"This Year\", data: d3.range(count).map(function() { return Math.random() * 1 + 1.5; })}];\n    var name = [{name: \"Name\", data: d3.range(count).map(function(it) { return plotdb.data.sample.name[it % plotdb.data.sample.name.length]; })}];\n    var category = [{name: \"Dept.\",\n      data: d3.range(count).map(function(it) { return plotdb.data.sample.category[it % plotdb.data.sample.category.length]; })}];\n    return {\n      value1: value1, value2: value2, name: name, category: category\n    };\n  },\n  dimension: {\n    value1: { type: [plotdb.Number], require: true, desc: \"value 1\" },\n    value2: { type: [plotdb.Number], require: true, desc: \"value 2\" },\n    name: { type: [], require: true, desc: \"value name\"},\n    category: { type: [], require: false, desc: \"category\"}\n  },\n  config: {\n    fontFamily: {},\n    background: {},\n    textFill: {},\n    fontSize: {},\n    margin: {},\n    padding: {},\n    palette: {},\n    gridShow: {},\n    gridStroke: {},\n    gridStrokeWidth: {},\n    gridDashArray: {},\n    nodeShow: {},\n    nodeSize: {},\n    xAxisShow: {},\n    xAxisLabel: {},\n    xAxisTickSizeInner: {},\n    xAxisTickSizeOuter: {},\n    xAxisTickPadding: {},\n    xAxisShowDomain: {default: true},\n    xAxisTickCount: {},\n    xAxisLabelPosition: {},\n    xAxisStroke: {},\n    sort: { type: [plotdb.Choice([\"None\", \"Category\", \"Value1\", \"Value2\", \"Length\"])], default: \"None\", rebindOnChange: true },\n    value1: { name: \"Old Value\", type: [plotdb.Color], default: \"#940\",\n            hint: plotdb.Color.subtype.positive},\n    value2: { name: \"New Value\", type: [plotdb.Color], default: \"#049\",\n            hint: plotdb.Color.subtype.negative},\n    value1Label: { name: \"Old Label\", type: [plotdb.String], default: \"\" },\n    value2Label: { name: \"New Label\", type: [plotdb.String], default: \"\" },\n    popupShow: {},\n    unit: {}\n  },\n  init: function() {\n    var that = this;\n    this.svg = d3.select(this.root).append(\"svg\");\n    this.yAxisGroup = this.svg.append(\"g\").attr({class: \"axis vertical\"});\n    this.xAxisGroup = this.svg.append(\"g\").attr({class: \"axis horizontal\"});\n    this.gridGroup = this.svg.append(\"g\").attr({class: \"grid-group\"});\n    this.legendGroup = this.svg.append(\"g\").attr({class: \"legend-group\"});\n    this.tooltip = plotd3.html.tooltip(this.root).on(\"mouseover\", function(d,i,popup) {\n      var u = \" \" + (that.config.unit || \"\");\n      popup.select(\".title\").text(d.name);\n      popup.select(\".value\").text(\n        (Math.round(100 * d.value1)/100) + u + \" \\u279d \" + (Math.round(100 * d.value2)/100)  + u\n      );\n    });\n  },\n  parse: function() {\n    var that = this;\n    if(this.config.sort == \"Value1\") {\n      this.data.sort(function(a,b) { return b.value1 - a.value1; });\n    } else if(this.config.sort == \"Value2\") {\n      this.data.sort(function(a,b) { return b.value2 - a.value2; });\n    } else if(this.config.sort == \"Category\" && this.dimension.category.fields.length) {\n      this.data.sort(function(a,b) {\n        if(a.category > b.category) return -1;\n        if(b.category > a.category) return 1;\n        return 0;\n      });\n    } else if(this.config.sort == \"Length\") {\n      this.data.sort(function(a,b) {\n        return (b.value2 - b.value1) - (a.value2 - a.value1);\n      });\n    }\n    this.indexes = this.data.map(function(d,i) { return d.idx = i; });\n    this.values = this.data.map(function(it) { return [it.value1, it.value2]; }).reduce(function(a,b) { return a.concat(b); }, []);\n    this.valuerange = d3.extent(this.values);\n    if(!this.valuerange[0]) this.valuerange[0] = 0;\n    if(!this.valuerange[1]) this.valuerange[1] = 1;\n    this.catrange = d3.map(this.data, function(it) { return it.category || \"\"; }).keys().filter(function(it) { return it.length; });\n    this.nameMaxLen = d3.max(this.data.map(function(it) { return (it.name || \"\").length; }));\n    this.catmap = this.data.map(function(d,i) { return [d.category, i]; });\n    this.catextent = [];\n    for(var i = 0; i < this.catrange.length; i++) {\n      var list = this.catmap.filter(function(it) {  return it[0] == that.catrange[i]; });\n      this.catextent.push([this.catrange[i], list[0][1], list[list.length - 1][1]]);\n    }\n  },\n  bind: function() {\n    var that = this,sel;\n    sel = this.svg.selectAll(\"g.data-group\").data(this.data);\n    sel.exit().remove();\n    sel = sel.enter().append(\"g\").attr({class: \"data-group\"})\n    .each(function(d,i) {\n      var node = d3.select(this);\n      node.append(\"line\").attr({class: \"connect\", opacity: 1});\n      node.append(\"circle\").attr({class: \"data value1\", opacity: 1}).on(\"mouseover\", function() {\n        that.activeGroup = 1; that.render(); \n      }).on(\"mouseout\", function() { that.activeGroup = 0; that.render(); });\n      node.append(\"circle\").attr({class: \"data value2\", opacity: 1}).on(\"mouseover\", function() {\n        that.activeGroup = 2; that.render(); \n      }).on(\"mouseout\", function() { that.activeGroup = 0; that.render(); });\n    });\n    if(this.config.popupShow) this.tooltip.nodes(sel.selectAll(\"circle\"));\n    sel = this.svg.selectAll(\"g.category\").data(this.catextent);\n    sel.exit().remove();\n    sel.enter().append(\"g\").attr({class: \"category\"}).each(function(d,i) {\n      var node = d3.select(this);\n      node.append(\"line\");\n      node.append(\"text\");\n    });\n    this.svg.selectAll(\"g.category\").each(function(d,i) {\n      var node = d3.select(this);\n      node.select(\"line\").datum(d); node.select(\"text\").datum(d);\n    });\n  },\n  resize: function() {\n    var that = this;\n    var box = this.root.getBoundingClientRect();\n    var svgbox = this.svg[0][0].getBoundingClientRect();\n    var width = this.width = box.width;\n    this.xAxisHeight = this.config.fontSize * 2;\n    var height = (this.config.fontSize * 1.5 + 10 + this.config.padding )* this.data.length + this.xAxisHeight + that.config.margin * 2;\n    height = (box.height - svgbox.top > height - svgbox.top ? box.height - svgbox.top - 3: height - svgbox.top - 3);\n    this.height = height;\n    this.svg.attr({\n      width: width + \"px\", height: height + \"px\",\n      viewBox: [0,0,width,height].join(\" \"),\n      preserveAspectRatio: \"xMidYMid\"\n    });\n    this.tooltip.fontSize(this.config.fontSize);\n    var legendScale = d3.scale.ordinal()\n      .domain([\n        this.config.value1Label || this.dimension.value1.fieldName || \"before\",\n        this.config.value2Label || this.dimension.value2.fieldName || \"after\"])\n      .range([this.config.value1, this.config.value2]);\n    this.legend = plotd3.rwd.legend().orient(\"top\").scale(legendScale).fontSize(this.config.fontSize);\n    this.legendGroup.call(this.legend);\n    this.legendSize = this.legend.offset();\n    this.legendSize[1] += this.config.fontSize;\n    this.legendGroup.selectAll(\".legend\").on(\"mouseover\", function(d,i) {\n      that.activeGroup = i + 1;\n      that.render();\n    }).on(\"mouseout\", function(d,i) {\n      that.activeGroup = null;\n      that.render();\n    });\n    var rate = this.config.padding / (this.config.fontSize * 1.5 + 10 + this.config.padding);\n    this.yScale = d3.scale.ordinal()\n      .domain(this.indexes)\n      .rangePoints([\n        this.xAxisHeight + this.legendSize[1] + this.config.margin + this.config.fontSize,\n        this.height - this.config.margin - this.config.fontSize\n      ], rate, rate);\n    this.yAxis = plotd3.rwd.axis()\n      .orient(\"left\")\n      .scale(this.yScale)\n      .ticks(0)\n      .fontSize(this.config.fontSize)\n    .tickFormat(function(it) { \n      return that.data[it].name; \n    });\n    this.yAxisGroup.call(this.yAxis);\n    this.yAxisGroup.selectAll(\".tick line\").remove();\n    this.yAxisGroup.selectAll(\".domain\").remove();\n    this.yAxisWidth = this.yAxis.offset();\n    this.xScale = d3.scale.linear().domain(this.valuerange).range([\n      this.yAxisWidth + this.config.margin + 2 * this.config.fontSize, width - this.config.margin - this.config.fontSize * 0.5\n    ]);\n    this.xAxis = plotd3.rwd.axis()\n      .orient(\"top\")\n      .scale(this.xScale)\n      .label(this.config.xAxisLabel || \"\")\n      .labelPosition(this.config.xAxisLabelPosition)\n      .ticks(this.config.xAxisTickCount)\n      .tickSize(this.config.xAxisTickSizeInner, this.config.xAxisTickSizeOuter)\n      .tickPadding(this.config.xAxisTickPadding)\n      .fontSize(this.config.fontSize);\n    this.xAxisGroup.call(this.xAxis);\n    var ticks = this.xAxis.tickValues();\n    var update = this.gridGroup.selectAll(\"line.grid.vertical\").data(ticks);\n    update.exit().remove();\n    update.enter().append(\"line\").attr({class: \"grid vertical\"});\n    this.cscale = plotdb.Palette.scale.ordinal(this.config.palette);\n  },\n  render: function() {\n    var that = this;\n    var maxWidth = 0;\n    if(this.config.fontFamily) d3.select(this.root).style(\"font-family\", this.config.fontFamily);\n    d3.select(this.root).style(\"background-color\", this.config.background);\n    this.svg.selectAll(\"text\").attr({\n      \"font-size\": that.config.fontSize,\n      \"fill\": that.config.textFill\n    });\n    this.legendGroup.attr({ transform: [\n      \"translate(\", (this.width - this.legendSize[0])/2, this.config.margin, \")\"\n    ].join(\" \")});\n    this.yAxisGroup.attr({\n      transform: \"translate(\" + (this.yAxisWidth + this.config.margin) +\",0)\"\n    });\n    this.svg.selectAll(\"text\").attr({\n      \"font-size\": that.config.fontSize\n    });\n    this.svg.selectAll(\"line.grid.vertical\").attr({\n      y1: this.xAxisHeight + this.config.margin + this.legendSize[1],\n      y2: that.height - that.config.margin,\n      x1: function(it) { return that.xScale(it); },\n      x2: function(it) { return that.xScale(it); },\n      stroke: this.config.gridStroke,\n      \"stroke-width\": this.config.gridStrokeWidth,\n      \"stroke-dasharray\": this.config.gridDashArray,\n      display: (this.config.gridShow ? \"block\" : \"none\")\n    });\n    this.xAxisGroup.attr({\n      transform: \"translate(0,\"+ ( this.xAxisHeight + this.config.margin + this.legendSize[1]) + \")\",\n      display: this.config.xAxisShow ? \"block\" : \"none\"\n    });\n    this.xAxisGroup.selectAll(\".domain\").attr({display: (this.config.xAxisShowDomain ? \"block\" : \"none\")});\n    this.xAxisGroup.selectAll(\"path,line\").attr({ stroke: that.config.xAxisStroke });\n    this.svg.selectAll(\"g.data-group\").attr({\n      transform: function(d,i) {\n        return [\n          \"translate(\",\n          0,\n          \",\",\n          that.yScale(d.idx),\n          \")\"\n        ].join(\"\");\n      }\n    }).each(function(d,i) {\n      var node = d3.select(this);\n      node.selectAll(\"circle\").attr({\n        r: that.config.nodeSize / 2,\n        display: (that.config.nodeShow ? \"block\" : \"none\")\n      });      node.select(\"circle.value1\").attr({\n        fill: that.config.value1,\n        stroke: that.config.value1      \n      }).transition(\"morph\").duration(500).attr({\n        cx: function(it) { return that.xScale(it.value1); },\n        cy: 0,\n      });\n      node.select(\"circle.value1\").transition().attr({\n        opacity: function() { if(!that.activeGroup || that.activeGroup == 1) return 1; else return 0.1; }\n      });\n      node.select(\"circle.value2\").attr({\n        fill: that.config.value2,\n        stroke: that.config.value2\n      }).transition(\"morph\").duration(500).attr({\n        cx: function(it) { return that.xScale(it.value2); },\n        cy: 0,\n      });\n      node.select(\"circle.value2\").transition().attr({\n        opacity: function() { if(!that.activeGroup || that.activeGroup == 2) return 1; else return 0.1; }\n      });\n      node.select(\"line\").attr({\n        stroke: function(it) {\n          return (it.value1 > it.value2 ? that.config.value1 : that.config.value2 )\n        }\n      }).transition(\"morph\").duration(500).attr({\n        x1: function(it) { return that.xScale(it.value1); },\n        x2: function(it) { return that.xScale(it.value2); },\n        y1: 0, y2: 0,\n      });\n      node.select(\"line\").transition(\"opacity\").duration(500).attr({\n        opacity: function(d) {\n          var v = ((d.value1 - d.value2)>=0 ? 1 : 2);\n          if(!that.activeGroup || that.activeGroup == v) return 1; else return 0.1;\n        }\n      });\n    });\n    this.svg.selectAll(\"g.category line\").attr({\n      x1: that.yAxisWidth + that.config.margin + 1 + that.config.fontSize / 2,\n      x2: that.yAxisWidth + that.config.margin + 1 + that.config.fontSize / 2,\n      y1: function(d,i) { return that.yScale(d[1]) - that.config.fontSize; },\n      y2: function(d,i) { return that.yScale(d[2]) + that.config.fontSize; },\n      stroke: function(d,i) { return that.cscale(d[0]); },\n      \"stroke-width\": that.config.fontSize + 2\n    }).style({\n      display: (this.config.sort == \"Category\" && this.dimension.category.fields.length ? \"block\" : \"none\")\n    });\n    this.svg.selectAll(\"g.category text\").attr({\n      x: that.yAxisWidth + that.config.margin + 1 + that.config.fontSize / 2,\n      y: function(d,i) { return that.yScale(d[1]) - that.config.fontSize * 0.5; },\n      \"writing-mode\": \"tb\",\n      \"font-size\": 0.8 * that.config.fontSize,\n      fill: function(d,i) {\n        var c = d3.hsl(that.cscale(d[0]));\n        return (c.l > 0.7 ? \"#000\" : \"#fff\");\n      },\n    }).style({\n      display: (this.config.sort == \"Category\" && this.dimension.category.fields.length ? \"block\" : \"none\")\n    }).text(function(d,i) { return d[0]; });\n  }\n}"},"assets":[],"dimension":{"value1":{"type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"require":true,"desc":"value 1","fields":[{"name":"Last Year","data":[1.3829288882819029,2.2388323985483876,1.9938339363772153,1.9311139895727862,1.7096943083879892,1.197215462460463,1.954697975476683,1.4152808723077455,1.4939994515163706,1.4133782431213757,1.7635957249897554,1.3015081951564693,1.2081795057206928,1.9618859844940317,2.1630292116334138,1.8971942728077584,1.3108007241513717,1.551993299332842,2.3815099731675486,1.537249921388749],"datatype":"Number","bind":"value1"}],"fieldName":["Last Year"]},"value2":{"type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"require":true,"desc":"value 2","fields":[{"name":"This Year","data":[2.0408996539030615,1.8272384280285188,2.0985956015280998,2.0149394140395467,2.4556592727176616,1.8550658698343991,2.27967985103476,2.23490550323177,2.158287086368313,1.542588068700977,2.103813136979595,1.6913365883531675,2.303957972411415,1.8800102152826967,2.399713208921252,1.7894924822023432,1.5219624785198513,2.3400294890066773,2.085341439669847,1.7807149447498627],"datatype":"Number","bind":"value2"}],"fieldName":["This Year"]},"name":{"type":[],"require":true,"desc":"value name","fields":[{"name":"Name","data":["James","Joe","Amelie","Yale","Doraemon","Cindy","David","Frank","Kim","Ken","Leland","Mike","Nick","Oliver","Randy","Andy","Angelica","Zack","Alfred","Edward"],"datatype":"String","bind":"name"}],"fieldName":["Name"]},"category":{"type":[],"require":false,"desc":"category","fields":[{"name":"Dept.","data":["IT","RD","GM","FIN","LEGAL","HR","SALES","BD","IT","RD","GM","FIN","LEGAL","HR","SALES","BD","IT","RD","GM","FIN"],"datatype":"String","bind":"category"}],"fieldName":["Dept."]}},"config":{"sort":{"name":"Sort data","type":[{"name":"Choice","level":20,"values":["None","Category","Value1","Value2","Length"],"default":""}],"value":"Value1","default":"None","category":"Value","rebindOnChange":true},"unit":{"desc":"Unit of value","name":"Unit","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"","default":"","category":"Value"},"margin":{"name":"Margin","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"20","default":10,"category":"Global Settings"},"value1":{"hint":"positive","name":"Old Value","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#d10303","default":"#940"},"value2":{"hint":"negative","name":"New Value","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#31679d","default":"#049"},"padding":{"name":"Padding","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"10","default":10,"category":"Global Settings"},"palette":{"name":"Palette","type":[{"re":{},"name":"Palette","level":30,"scale":{},"binary":{"colors":[{"hex":"#ff8356"},{"hex":"#0076a1"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"subtype":{"binary":"binary","diverging":"diverging","sequential":"sequential","qualitative":"qualitative"},"diverging":{"colors":[{"hex":"#74001a"},{"hex":"#cd2149"},{"hex":"#f23971"},{"hex":"#ff84ab"},{"hex":"#ffc3d7"},{"hex":"#f2f2dd"},{"hex":"#b8d9ed"},{"hex":"#81b1d0"},{"hex":"#3d8bb7"},{"hex":"#0071a8"},{"hex":"#003558"}]},"sequential":{"colors":[{"hex":"#950431"},{"hex":"#be043e"},{"hex":"#ec326d"},{"hex":"#fc82a9"},{"hex":"#febed2"},{"hex":"#fee6ee"}]},"qualitative":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]}}],"value":{"colors":[{"hex":"#1d3263","$$hashKey":"object:181"},{"hex":"#226c87","$$hashKey":"object:182"},{"hex":"#f8d672","$$hashKey":"object:183"},{"hex":"#e48e11","$$hashKey":"object:184"},{"hex":"#e03215","$$hashKey":"object:185"},{"hex":"#ab2321","$$hashKey":"object:186"}]},"default":{"colors":[{"hex":"#f4502a"},{"hex":"#f1c227"},{"hex":"#008a6d"},{"hex":"#00acdb"},{"hex":"#0064a8"}]},"category":"Global Settings"},"fontSize":{"name":"Font Size","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"12","default":13,"category":"Global Settings"},"gridShow":{"name":"Show Grid","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"Grid"},"nodeShow":{"name":"Show Data Dot","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"Dot"},"nodeSize":{"name":"Dot Size","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"12","default":6,"category":"Dot"},"textFill":{"name":"Text Color","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#000000","default":"#000000","category":"Global Settings"},"popupShow":{"desc":"show Popup when user hovers over elements","name":"show Popup","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"Popup","rebindOnChange":true},"xAxisShow":{"name":"Show Axis","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"X Axis"},"background":{"name":"Background","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#ffffff","default":"#ffffff","category":"Global Settings"},"fontFamily":{"name":"Font","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"Arial","default":"Arial","category":"Global Settings"},"gridStroke":{"name":"Color","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#cccccc","default":"#ccc","category":"Grid"},"xAxisLabel":{"name":"Label","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"","default":"","category":"X Axis"},"value1Label":{"name":"Old Label","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"","default":""},"value2Label":{"name":"New Label","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"","default":""},"xAxisStroke":{"name":"Stroke Color","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#000000","default":"#000","category":"X Axis"},"gridDashArray":{"desc":"SVG style dash array. '2 4' means 2px line and 4px space.","name":"Dash Style","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"2 4","default":"2 4","category":"Grid"},"xAxisTickCount":{"desc":"Hint on number of tick. Actual number will be decided by program","name":"Tick Count","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"6","default":6,"category":"X Axis"},"gridStrokeWidth":{"name":"Stroke Width","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":1,"default":1,"category":"Grid"},"xAxisShowDomain":{"name":"Show Basline","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"X Axis"},"xAxisTickPadding":{"name":"Tick Padding","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":4,"default":4,"category":"X Axis"},"xAxisLabelPosition":{"name":"Label Position","type":[{"name":"Choice","level":20,"values":["in","center"],"default":""}],"value":"center","default":"center","category":"X Axis"},"xAxisTickSizeInner":{"name":"Inner Tick Size","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":4,"default":4,"category":"X Axis"},"xAxisTickSizeOuter":{"name":"Outer Tick Size","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":0,"default":0,"category":"X Axis"}},"library":["d3/3.5.12/min","plotd3/0.1.0"],"local":null,"inherit":[],"metashow":false,"footer":null},"dimension":{"value1":{"type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"require":true,"desc":"value 1","fields":[{"name":"Last Year","data":[1.3829288882819029,2.2388323985483876,1.9938339363772153,1.9311139895727862,1.7096943083879892,1.197215462460463,1.954697975476683,1.4152808723077455,1.4939994515163706,1.4133782431213757,1.7635957249897554,1.3015081951564693,1.2081795057206928,1.9618859844940317,2.1630292116334138,1.8971942728077584,1.3108007241513717,1.551993299332842,2.3815099731675486,1.537249921388749],"datatype":"Number","bind":"value1"}],"fieldName":["Last Year"]},"value2":{"type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"require":true,"desc":"value 2","fields":[{"name":"This Year","data":[2.0408996539030615,1.8272384280285188,2.0985956015280998,2.0149394140395467,2.4556592727176616,1.8550658698343991,2.27967985103476,2.23490550323177,2.158287086368313,1.542588068700977,2.103813136979595,1.6913365883531675,2.303957972411415,1.8800102152826967,2.399713208921252,1.7894924822023432,1.5219624785198513,2.3400294890066773,2.085341439669847,1.7807149447498627],"datatype":"Number","bind":"value2"}],"fieldName":["This Year"]},"name":{"type":[],"require":true,"desc":"value name","fields":[{"name":"Name","data":["James","Joe","Amelie","Yale","Doraemon","Cindy","David","Frank","Kim","Ken","Leland","Mike","Nick","Oliver","Randy","Andy","Angelica","Zack","Alfred","Edward"],"datatype":"String","bind":"name"}],"fieldName":["Name"]},"category":{"type":[],"require":false,"desc":"category","fields":[{"name":"Dept.","data":["IT","RD","GM","FIN","LEGAL","HR","SALES","BD","IT","RD","GM","FIN","LEGAL","HR","SALES","BD","IT","RD","GM","FIN"],"datatype":"String","bind":"category"}],"fieldName":["Dept."]}},"animate":{"running":false,"last":0},"config":{"value":{"fontFamily":{"name":"Font","type":[{"default":"","name":"EditableChoice","level":20,"values":["Arial","Helvetica","Tahoma","Consolas","Century Gothic","Courier New"]}],"default":"Arial","category":"Global Settings","value":"Arial"},"background":{"name":"Background","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#ffffff","category":"Global Settings","value":"#ffffff"},"textFill":{"name":"Text Color","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#000000","category":"Global Settings","value":"#000000"},"fontSize":{"name":"Font Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":13,"category":"Global Settings","value":12},"margin":{"name":"Margin","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":10,"category":"Global Settings","min":0,"max":20,"value":20},"padding":{"name":"Padding","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":10,"category":"Global Settings","value":10},"palette":{"name":"Palette","type":[{"name":"Palette","level":30,"re":{},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]},"qualitative":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]},"binary":{"colors":[{"hex":"#ff8356"},{"hex":"#0076a1"}]},"sequential":{"colors":[{"hex":"#950431"},{"hex":"#be043e"},{"hex":"#ec326d"},{"hex":"#fc82a9"},{"hex":"#febed2"},{"hex":"#fee6ee"}]},"diverging":{"colors":[{"hex":"#74001a"},{"hex":"#cd2149"},{"hex":"#f23971"},{"hex":"#ff84ab"},{"hex":"#ffc3d7"},{"hex":"#f2f2dd"},{"hex":"#b8d9ed"},{"hex":"#81b1d0"},{"hex":"#3d8bb7"},{"hex":"#0071a8"},{"hex":"#003558"}]},"subtype":{"qualitative":"qualitative","binary":"binary","sequential":"sequential","diverging":"diverging"},"scale":{}}],"default":{"colors":[{"hex":"#f4502a"},{"hex":"#f1c227"},{"hex":"#008a6d"},{"hex":"#00acdb"},{"hex":"#0064a8"}]},"category":"Global Settings","value":{"colors":[{"hex":"#1d3263","$$hashKey":"object:181"},{"hex":"#226c87","$$hashKey":"object:182"},{"hex":"#f8d672","$$hashKey":"object:183"},{"hex":"#e48e11","$$hashKey":"object:184"},{"hex":"#e03215","$$hashKey":"object:185"},{"hex":"#ab2321","$$hashKey":"object:186"}]}},"gridShow":{"name":"Show Grid","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"Grid","value":true},"gridStroke":{"name":"Color","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#ccc","category":"Grid","value":"#cccccc"},"gridStrokeWidth":{"name":"Stroke Width","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":1,"category":"Grid","value":1},"gridDashArray":{"name":"Dash Style","type":[{"name":"String","default":"","level":2,"basetype":[]}],"default":"2 4","category":"Grid","desc":"SVG style dash array. '2 4' means 2px line and 4px space.","value":"2 4"},"nodeShow":{"name":"Show Data Dot","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"Dot","value":true},"nodeSize":{"name":"Dot Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":6,"category":"Dot","value":12},"xAxisShow":{"name":"Show Axis","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"X Axis","value":true},"xAxisLabel":{"name":"Label","type":[{"name":"String","default":"","level":2,"basetype":[]}],"default":"","category":"X Axis","value":""},"xAxisTickSizeInner":{"name":"Inner Tick Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":4,"category":"X Axis","value":4},"xAxisTickSizeOuter":{"name":"Outer Tick Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":0,"category":"X Axis","value":0},"xAxisTickPadding":{"name":"Tick Padding","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":4,"category":"X Axis","value":4},"xAxisShowDomain":{"default":true,"name":"Show Basline","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"category":"X Axis","value":true},"xAxisTickCount":{"name":"Tick Count","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":6,"category":"X Axis","desc":"Hint on number of tick. Actual number will be decided by program","value":6},"xAxisLabelPosition":{"name":"Label Position","type":[{"default":"","name":"Choice","level":20,"values":["in","center"]}],"default":"center","category":"X Axis","value":"center"},"xAxisStroke":{"name":"Stroke Color","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#000","category":"X Axis","value":"#000000"},"sort":{"type":[{"default":"","name":"Choice","level":20,"values":["None","Category","Value1","Value2","Length"]}],"default":"None","rebindOnChange":true,"name":"Sort data","category":"Value","value":"Value1"},"value1":{"name":"Old Value","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#940","hint":"positive","value":"#d10303"},"value2":{"name":"New Value","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#049","hint":"negative","value":"#31679d"},"value1Label":{"name":"Old Label","type":[{"name":"String","default":"","level":2,"basetype":[]}],"default":"","value":""},"value2Label":{"name":"New Label","type":[{"name":"String","default":"","level":2,"basetype":[]}],"default":"","value":""},"popupShow":{"name":"show Popup","desc":"show Popup when user hovers over elements","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"Popup","rebindOnChange":true,"value":true},"unit":{"name":"Unit","type":[{"name":"String","default":"","level":2,"basetype":[]}],"default":"","desc":"Unit of value","category":"Value","value":""}},"group":{"Global Settings":{"fontFamily":{"name":"Font","type":[{"default":"","name":"EditableChoice","level":20,"values":["Arial","Helvetica","Tahoma","Consolas","Century Gothic","Courier New"]}],"default":"Arial","category":"Global Settings","value":"Arial"},"background":{"name":"Background","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#ffffff","category":"Global Settings","value":"#ffffff"},"textFill":{"name":"Text Color","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#000000","category":"Global Settings","value":"#000000"},"fontSize":{"name":"Font Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":13,"category":"Global Settings","value":12},"margin":{"name":"Margin","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":10,"category":"Global Settings","min":0,"max":20,"value":20},"padding":{"name":"Padding","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":10,"category":"Global Settings","value":10},"palette":{"name":"Palette","type":[{"name":"Palette","level":30,"re":{},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]},"qualitative":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]},"binary":{"colors":[{"hex":"#ff8356"},{"hex":"#0076a1"}]},"sequential":{"colors":[{"hex":"#950431"},{"hex":"#be043e"},{"hex":"#ec326d"},{"hex":"#fc82a9"},{"hex":"#febed2"},{"hex":"#fee6ee"}]},"diverging":{"colors":[{"hex":"#74001a"},{"hex":"#cd2149"},{"hex":"#f23971"},{"hex":"#ff84ab"},{"hex":"#ffc3d7"},{"hex":"#f2f2dd"},{"hex":"#b8d9ed"},{"hex":"#81b1d0"},{"hex":"#3d8bb7"},{"hex":"#0071a8"},{"hex":"#003558"}]},"subtype":{"qualitative":"qualitative","binary":"binary","sequential":"sequential","diverging":"diverging"},"scale":{}}],"default":{"colors":[{"hex":"#f4502a"},{"hex":"#f1c227"},{"hex":"#008a6d"},{"hex":"#00acdb"},{"hex":"#0064a8"}]},"category":"Global Settings","value":{"colors":[{"hex":"#1d3263","$$hashKey":"object:181"},{"hex":"#226c87","$$hashKey":"object:182"},{"hex":"#f8d672","$$hashKey":"object:183"},{"hex":"#e48e11","$$hashKey":"object:184"},{"hex":"#e03215","$$hashKey":"object:185"},{"hex":"#ab2321","$$hashKey":"object:186"}]}}},"Grid":{"gridShow":{"name":"Show Grid","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"Grid","value":true},"gridStroke":{"name":"Color","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#ccc","category":"Grid","value":"#cccccc"},"gridStrokeWidth":{"name":"Stroke Width","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":1,"category":"Grid","value":1},"gridDashArray":{"name":"Dash Style","type":[{"name":"String","default":"","level":2,"basetype":[]}],"default":"2 4","category":"Grid","desc":"SVG style dash array. '2 4' means 2px line and 4px space.","value":"2 4"}},"Dot":{"nodeShow":{"name":"Show Data Dot","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"Dot","value":true},"nodeSize":{"name":"Dot Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":6,"category":"Dot","value":12}},"X Axis":{"xAxisShow":{"name":"Show Axis","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"X Axis","value":true},"xAxisLabel":{"name":"Label","type":[{"name":"String","default":"","level":2,"basetype":[]}],"default":"","category":"X Axis","value":""},"xAxisTickSizeInner":{"name":"Inner Tick Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":4,"category":"X Axis","value":4},"xAxisTickSizeOuter":{"name":"Outer Tick Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":0,"category":"X Axis","value":0},"xAxisTickPadding":{"name":"Tick Padding","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":4,"category":"X Axis","value":4},"xAxisShowDomain":{"default":true,"name":"Show Basline","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"category":"X Axis","value":true},"xAxisTickCount":{"name":"Tick Count","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":6,"category":"X Axis","desc":"Hint on number of tick. Actual number will be decided by program","value":6},"xAxisLabelPosition":{"name":"Label Position","type":[{"default":"","name":"Choice","level":20,"values":["in","center"]}],"default":"center","category":"X Axis","value":"center"},"xAxisStroke":{"name":"Stroke Color","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#000","category":"X Axis","value":"#000000"}},"Value":{"sort":{"type":[{"default":"","name":"Choice","level":20,"values":["None","Category","Value1","Value2","Length"]}],"default":"None","rebindOnChange":true,"name":"Sort data","category":"Value","value":"Value1"},"unit":{"name":"Unit","type":[{"name":"String","default":"","level":2,"basetype":[]}],"default":"","desc":"Unit of value","category":"Value","value":""}},"Other":{"value1":{"name":"Old Value","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#940","hint":"positive","value":"#d10303"},"value2":{"name":"New Value","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#049","hint":"negative","value":"#31679d"},"value1Label":{"name":"Old Label","type":[{"name":"String","default":"","level":2,"basetype":[]}],"default":"","value":""},"value2Label":{"name":"New Label","type":[{"name":"String","default":"","level":2,"basetype":[]}],"default":"","value":""}},"Popup":{"popupShow":{"name":"show Popup","desc":"show Popup when user hovers over elements","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"Popup","rebindOnChange":true,"value":true}}}},"data":{"data":[{"name":"Last Year","data":[1.3829288882819029,2.2388323985483876,1.9938339363772153,1.9311139895727862,1.7096943083879892,1.197215462460463,1.954697975476683,1.4152808723077455,1.4939994515163706,1.4133782431213757,1.7635957249897554,1.3015081951564693,1.2081795057206928,1.9618859844940317,2.1630292116334138,1.8971942728077584,1.3108007241513717,1.551993299332842,2.3815099731675486,1.537249921388749],"datatype":"Number","bind":"value1"},{"name":"This Year","data":[2.0408996539030615,1.8272384280285188,2.0985956015280998,2.0149394140395467,2.4556592727176616,1.8550658698343991,2.27967985103476,2.23490550323177,2.158287086368313,1.542588068700977,2.103813136979595,1.6913365883531675,2.303957972411415,1.8800102152826967,2.399713208921252,1.7894924822023432,1.5219624785198513,2.3400294890066773,2.085341439669847,1.7807149447498627],"datatype":"Number","bind":"value2"},{"name":"Name","data":["James","Joe","Amelie","Yale","Doraemon","Cindy","David","Frank","Kim","Ken","Leland","Mike","Nick","Oliver","Randy","Andy","Angelica","Zack","Alfred","Edward"],"datatype":"String","bind":"name"},{"name":"Dept.","data":["IT","RD","GM","FIN","LEGAL","HR","SALES","BD","IT","RD","GM","FIN","LEGAL","HR","SALES","BD","IT","RD","GM","FIN"],"datatype":"String","bind":"category"}]},"library":{"hash":{"d3/3.5.12/min":"blob:https://plotdb.com/892a33a6-fc23-4020-877e-d7396b976d5c","plotd3/0.1.0":"blob:https://plotdb.com/9a06c3fe-a7e2-42f8-b3aa-d9f34b92f429"}},"promise":{"sample":null}}