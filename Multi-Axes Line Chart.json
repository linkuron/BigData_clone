{"src":"{\"ownername\":\"plotdb\",\"key\":2143,\"name\":\"Multi-Axes Line Chart\",\"owner\":4,\"theme\":null,\"parent\":null,\"description\":\"a general multiple line chart with un-aligned y axes.\",\"basetype\":[\"2\"],\"visualencoding\":[\"2\",\"4\"],\"category\":[\"5\"],\"tags\":[\"multiple\"],\"likes\":0,\"searchable\":true,\"dimlen\":2,\"createdtime\":\"2016-11-21T20:06:06.000Z\",\"modifiedtime\":\"2017-01-28T06:16:42.000Z\",\"doc\":{\"name\":\"document\",\"size\":0,\"type\":\"html\",\"lines\":1,\"content\":\"\"},\"style\":{\"name\":\"stylesheet\",\"size\":0,\"type\":\"css\",\"lines\":1,\"content\":\"\"},\"code\":{\"name\":\"code\",\"size\":11378,\"type\":\"javascript\",\"lines\":289,\"content\":\"{\\n  sample: function() {\\n    var list = d3.range(Math.round(Math.random() * 5 + 15));\\n    var series = d3.range(Math.round(Math.random() * 2 + 3));\\n    return {\\n      order: [{name: \\\"Order\\\", data: list.map(function(d,i) { return i; })}],\\n      values: series.map(function(e,j) {\\n        return {\\n          name: \\\"Series \\\" + (j+1),\\n          data: list.map(function(d,i) {\\n            return (\\n              Math.sin(j*2 + Math.random() * 0.1 + Math.PI * i / (20+Math.random())) + \\n              Math.cos(j*3 + Math.random() * 0.2 + Math.PI * (15 - i) / (24+Math.random() * 2)) \\n            )\\n          })\\n        };\\n      })\\n    };\\n  },\\n  dimension: {\\n    order: { type: [plotdb.Order], require: false, desc: \\\"order in X axis\\\"},\\n    values: { type: [plotdb.Number], require: true, desc: \\\"position in Y axis\\\", multiple: true }\\n  },\\n  config: {\\n    fontFamily: {},\\n    background: {},\\n    textFill: {},\\n    fontSize: {},\\n    margin: {},\\n    palette: {},\\n    legendShow: {},\\n    legendLabel: {},\\n    strokeWidth: {},\\n    nodeSize: {default: 12},\\n    nodeShow: {},\\n    nodeStrokeWidth: {default: 2},\\n    nodeFill: {default: \\\"#fff\\\"},\\n    gridStroke: {},\\n    gridStrokeWidth: {},\\n    gridDashArray: {},\\n    gridShow: {},\\n    yAxisShow: {},\\n    yAxisTickSizeInner: {},\\n    yAxisTickSizeOuter: {},\\n    yAxisTickPadding: {},\\n    yAxisShowDomain: {default: true},\\n    yAxisTickCount: {},\\n    xAxisShow: {},\\n    xAxisLabel: {},\\n    xAxisTickSizeInner: {},\\n    xAxisTickSizeOuter: {},\\n    xAxisTickPadding: {},\\n    xAxisShowDomain: {default: true},\\n    xAxisTickCount: {default: 0},\\n    xAxisStroke: {},\\n    xAxisLabelPosition: {},\\n    xAxisHandleOverlap: {},\\n    xAxisTickDirection: {},\\n    popupShow: {},\\n    sort: {rebindOnChange: true}\\n  },\\n  init: function() {\\n    var that = this;\\n    this.svg = d3.select(this.root).append(\\\"svg\\\");\\n    this.xAxisGroup = this.svg.append(\\\"g\\\").attr({class: \\\"axis horizontal\\\"});\\n    this.yAxisGroups = this.svg.append(\\\"g\\\").attr({class: \\\"axes\\\"});\\n    this.gridGroup = this.svg.append(\\\"g\\\").attr({class: \\\"grid-group\\\"});\\n    this.legendGroup = this.svg.append(\\\"g\\\").attr({class: \\\"legend-group\\\"});\\n    this.dataGroup = this.svg.append(\\\"g\\\").attr({class: \\\"data-group\\\"});\\n    this.grid = plotd3.rwd.grid();\\n    this.tooltip = plotd3.html.tooltip(this.root).on(\\\"mousemove\\\", function(d,i,popup) {\\n      popup.select(\\\".title\\\").text(that.names[d.idx] + \\\" / \\\" + d.x);\\n      popup.select(\\\".value\\\").text(Math.round(100*d.y)/100);\\n    });\\n  },\\n  parse: function() {\\n    var that = this;\\n    console.log(this.data);\\n    if(this.config.sort && this.config.sort != \\\"None\\\") {\\n      plotdb.Order.sort(this.data, \\\"order\\\", this.config.sort == \\\"Ascending\\\");\\n    }\\n    this.parsed = this.dimension.values.fields.map(function() { return []; });\\n    this.data.map(function(d,i) {\\n      that.parsed.forEach(function(e,j) { e.push({x: d.order, y: d.values[j], idx: j}); });\\n    });\\n    this.valueRanges = this.parsed.map(function(d,i) { return d3.extent(d,function(e,j) { return e.y; }); });\\n    this.orders = this.data.map(function(d,i) { return d.order; });\\n    this.names = this.dimension.values.fieldName;\\n  },\\n  bind: function() {\\n    var that = this,sel;\\n    sel = this.dataGroup.selectAll(\\\"g.data\\\").data(this.parsed);\\n    sel.exit().attr(\\\"class\\\",\\\"\\\").transition(\\\"exit\\\").duration(500).attr(\\\"opacity\\\", 0).remove();\\n    sel.enter().append(\\\"g\\\").attr({class: \\\"data\\\", opacity: 0});\\n    this.dataGroup.selectAll(\\\"g.data\\\").each(function(d,i) {\\n      var sel,node = d3.select(this);\\n      node.append(\\\"path\\\").attr({class: \\\"data\\\"});\\n      sel = node.selectAll(\\\"circle.node\\\").data(d);\\n      sel.exit().remove();\\n      sel = sel.enter().append(\\\"circle\\\").attr({class: \\\"node\\\"});\\n      if(that.config.popupShow) that.tooltip.nodes(sel);\\n    });\\n  },\\n  resize: function() {\\n    var that = this;\\n    var box = this.root.getBoundingClientRect();\\n    var width = this.width = box.width;\\n    var height = this.height = box.height;\\n    this.svg.attr({\\n      width: width + \\\"px\\\", height: height + \\\"px\\\",\\n      viewBox: [0,0,width,height].join(\\\" \\\"),\\n      preserveAspectRatio: \\\"xMidYMid\\\"\\n    });\\n    this.tooltip.fontSize(this.config.fontSize);\\n    this.cScale = plotdb.Palette.scale.ordinal(this.config.palette);\\n    this.legend = plotd3.rwd.legend().orient(\\\"bottom\\\").scale(this.cScale)\\n      .fontSize(this.config.fontSize)\\n      .label(this.config.legendLabel)\\n      .size([this.width - 2 * this.config.margin, 100])\\n      .tickValues(this.names);\\n    this.legendGroup.call(this.legend);\\n    this.legendGroup.selectAll(\\\".legend\\\").on(\\\"mouseover\\\", function(d,i) {\\n      that.activeGroup = d; that.render();\\n    }).on(\\\"mouseout\\\", function(d,i) {\\n      that.activeGroup = null; that.render();\\n    });\\n    this.legendSize = this.config.legendShow ? this.legend.offset() : [0,0];\\n    this.xScale = d3.scale.ordinal()\\n      .domain(this.orders)\\n      .rangeBands([this.config.margin, this.width - this.config.margin], 0, 0);\\n    this.xAxis = plotd3.rwd.axis()\\n      .orient(\\\"bottom\\\")\\n      .scale(this.xScale)\\n      .label(this.config.xAxisLabel || \\\"\\\")\\n      .labelPosition(this.config.xAxisLabelPosition)\\n      .tickSize(this.config.xAxisTickSizeInner, this.config.xAxisTickSizeOuter)\\n      .tickPadding(this.config.xAxisTickPadding)\\n      .ticks(this.config.xAxisTickCount)\\n      .tickDirection(this.config.xAxisTickDirection)\\n      .handleOverlap(this.config.xAxisHandleOverlap)\\n      .tickFormat(function(d,i) {\\n        if(typeof(that.orders[i])==\\\"undefined\\\") return \\\"\\\";\\n        return that.orders[i].value || that.orders[i];\\n      })\\n      .fontSize(this.config.fontSize);\\n    this.xAxisGroup.call(this.xAxis);\\n    this.xAxisHeight = (this.config.xAxisShow ? this.xAxis.offset(): 0);\\n    this.yScales = [];\\n    this.yAxes = [];\\n    this.yAxisWidthes = [];\\n    this.lineBuilders = [];\\n    var sel = this.yAxisGroups.selectAll(\\\"g.axis.vertical\\\").data(this.parsed);\\n    sel.exit().remove();\\n    sel.enter().append(\\\"g\\\").attr({class: \\\"axis vertical\\\"});\\n    this.yAxisGroups.selectAll(\\\"g.axis.vertical\\\").each(function(d,i) {\\n      var yScale, yAxis, node;\\n      node = d3.select(this);\\n      yScale = d3.scale.linear()\\n        .domain(that.valueRanges[i])\\n        .range([\\n          that.height - that.config.margin - that.xAxisHeight - (that.config.legendShow ? that.legendSize[1] + that.config.fontSize : 0), \\n          that.config.margin\\n        ]);\\n      yAxis = plotd3.rwd.axis()\\n        .orient(i==0?\\\"left\\\":\\\"right\\\")\\n        .scale(yScale)\\n        .ticks(that.config.yAxisTickCount)\\n        .tickSize(that.config.yAxisTickSizeInner, that.config.yAxisTickSizeOuter)\\n        .tickPadding(that.config.yAxisTickPadding)\\n        .fontSize(that.config.fontSize);\\n      node.call(yAxis);\\n      var yAxisWidth = (that.config.yAxisShow ? yAxis.offset() + that.config.fontSize: 0);\\n      var lineBuilder = d3.svg.line()\\n        .x(function(d,i) { return that.xScale(d.x) + that.xBand/2; })\\n        .y(function(d,i) { return yScale(d.y); });\\n      that.yScales.push(yScale);\\n      that.yAxes.push(yAxis);\\n      that.lineBuilders.push(lineBuilder);\\n      that.yAxisWidthes.push(yAxisWidth);\\n    });\\n    var rightAxisWidthes = 0;\\n    for(var i=1;i<this.yAxisWidthes.length;i++) {\\n      rightAxisWidthes += this.yAxisWidthes[i];\\n    }\\n    this.xScale.rangeBands([\\n      this.config.margin + this.yAxisWidthes[0], this.width - this.config.margin - rightAxisWidthes,\\n    ], 0, 0);\\n    this.xAxisGroup.call(this.xAxis);\\n    this.xBand = this.xScale.rangeBand();\\n    this.rightAxisWidthes = rightAxisWidthes;\\n    this.yAxisOffset = [\\n      this.config.margin + this.yAxisWidthes[0]\\n    ];\\n    for(var ret,i=1,sum=0;i<this.yAxisWidthes.length;i++) {\\n      this.yAxisOffset.push(this.width - this.rightAxisWidthes - this.config.margin + sum);\\n      sum += this.yAxisWidthes[i];\\n    }\\n    this.grid.scale(this.yScales[0])\\n      .stroke(this.config.gridStroke)\\n      .strokeWidth(this.config.gridStrokeWidth)\\n      .size(this.width - 2 * this.config.margin - rightAxisWidthes - this.yAxisWidthes[0])\\n      .strokeDashArray(this.config.gridDashArray)\\n      .tickValues(this.yAxes[0].tickValues())\\n      .orient(\\\"horizontal\\\");\\n    this.gridGroup.call(this.grid);\\n  },\\n  render: function() {\\n    var that = this;\\n    if(this.config.fontFamily) d3.select(this.root).style(\\\"font-family\\\", this.config.fontFamily);\\n    d3.select(this.root).style(\\\"background-color\\\", this.config.background);\\n    this.svg.selectAll(\\\"text\\\").attr({\\n      \\\"font-size\\\": that.config.fontSize,\\n      \\\"fill\\\": that.config.textFill\\n    });\\n    this.gridGroup.attr({\\n      transform: [\\n        \\\"translate(\\\",\\n        this.config.margin + this.yAxisWidthes[0],\\n        0,\\n        \\\")\\\"\\n      ].join(\\\" \\\"),\\n      display: (this.config.gridShow ? \\\"block\\\" : \\\"none\\\")\\n    });\\n    this.legendGroup.attr({\\n      transform: [\\n        \\\"translate(\\\",\\n        (this.width - this.legendSize[0])/2,\\n        (this.height - this.config.margin - this.legendSize[1]),\\n        \\\")\\\"\\n      ].join(\\\" \\\"),\\n      display: this.config.legendShow ? \\\"block\\\" : \\\"none\\\"\\n    });\\n    this.xAxisGroup.attr({\\n      \\\"transform\\\": \\\"translate(0,\\\" + (this.height - this.config.margin - this.xAxisHeight - (this.config.legendShow? this.legendSize[1] + this.config.fontSize : 0)) + \\\")\\\",\\n      display: this.config.xAxisShow ? \\\"block\\\" : \\\"none\\\"\\n    });\\n    this.yAxisGroups.selectAll(\\\"g.axis.vertical\\\").each(function(d,i) {\\n      var node = d3.select(this);\\n      node.attr({\\n        transform: [\\n          \\\"translate(\\\",\\n          that.yAxisOffset[i],\\n          0,\\n          \\\")\\\"\\n        ].join(\\\" \\\"),\\n        display: that.config.yAxisShow ? \\\"block\\\" : \\\"none\\\"\\n      });\\n      node.selectAll(\\\"line\\\").attr({stroke: that.cScale(that.names[i])});\\n      node.select(\\\"path\\\").attr({stroke: that.cScale(that.names[i])});\\n    });\\n    this.yAxisGroups.selectAll(\\\".domain\\\").attr({ display: (this.config.yAxisShowDomain ? \\\"block\\\" : \\\"none\\\")});\\n    this.xAxisGroup.selectAll(\\\".domain\\\").attr({ display: (this.config.xAxisShowDomain ? \\\"block\\\" : \\\"none\\\")});\\n    this.xAxisGroup.selectAll(\\\"path,line\\\").attr({ stroke: that.config.xAxisStroke });\\n    this.dataGroup.selectAll(\\\"g.data\\\").each(function(d,i) {\\n      var node = d3.select(this);\\n      node.select(\\\"path\\\").attr({\\n        fill: \\\"none\\\",\\n        stroke: function(e,j) { return that.cScale(that.names[i]); },\\n        \\\"stroke-width\\\": that.config.strokeWidth\\n      }).transition(\\\"morph\\\").duration(500).attr({\\n        d: function(e,j) { return that.lineBuilders[i](d); },\\n      });\\n    });\\n    this.dataGroup.selectAll(\\\"g.data\\\").each(function(e,j) {\\n      var node = d3.select(this);\\n      node.selectAll(\\\"circle\\\").attr({\\n        stroke: that.cScale(that.names[j]),\\n        \\\"stroke-width\\\": that.config.nodeStrokeWidth,\\n        fill: that.config.nodeFill,\\n        display: that.config.nodeShow ? \\\"block\\\" : \\\"none\\\"\\n      }).transition(\\\"morph\\\").duration(500).attr({\\n        cx: function(d,i) { return that.xScale(d.x) + that.xBand/2; },\\n        cy: function(d,i) { return that.yScales[j](d.y); },\\n        r: that.config.nodeSize/2,\\n      });\\n    });\\n    this.yAxisGroups.selectAll(\\\"g.axis\\\").transition(\\\"opacity\\\").duration(500).attr({\\n      opacity: function(d,i) {\\n        return (!that.activeGroup || that.activeGroup == that.names[i] ? 1 : 0.1);\\n      }\\n    });\\n    this.dataGroup.selectAll(\\\"g.data\\\").transition(\\\"opacity\\\").duration(500).attr({\\n      opacity: function(d,i) {\\n        return (!that.activeGroup || that.activeGroup == that.names[i] ? 1 : 0.1);\\n      }\\n    });\\n  }\\n}\\n\"},\"assets\":[],\"dimension\":{\"order\":{\"desc\":\"order in X axis\",\"type\":[\"Order\"],\"fields\":[],\"require\":false,\"fieldName\":null},\"values\":{\"desc\":\"position in Y axis\",\"type\":[\"Number\"],\"fields\":[],\"require\":true,\"multiple\":true,\"fieldName\":[]}},\"config\":{\"sort\":{\"name\":\"Sort data\",\"type\":[{\"name\":\"Choice\",\"level\":20,\"values\":[\"Ascending\",\"Descending\",\"None\"],\"default\":\"\"}],\"value\":\"Ascending\",\"default\":\"Descending\",\"category\":\"Value\",\"rebindOnChange\":true},\"margin\":{\"name\":\"Margin\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":\"10\",\"default\":10,\"category\":\"Global Settings\"},\"palette\":{\"name\":\"Palette\",\"type\":[{\"re\":{},\"name\":\"Palette\",\"level\":30,\"scale\":{},\"binary\":{\"colors\":[{\"hex\":\"#ff8356\"},{\"hex\":\"#0076a1\"}]},\"plotdb\":{\"colors\":[{\"hex\":\"#ed1d78\"},{\"hex\":\"#c59b6d\"},{\"hex\":\"#8cc63f\"},{\"hex\":\"#28aae2\"}]},\"default\":{\"colors\":[{\"hex\":\"#1d3263\"},{\"hex\":\"#226c87\"},{\"hex\":\"#f8d672\"},{\"hex\":\"#e48e11\"},{\"hex\":\"#e03215\"},{\"hex\":\"#ab2321\"}]},\"subtype\":{\"binary\":\"binary\",\"diverging\":\"diverging\",\"sequential\":\"sequential\",\"qualitative\":\"qualitative\"},\"diverging\":{\"colors\":[{\"hex\":\"#74001a\"},{\"hex\":\"#cd2149\"},{\"hex\":\"#f23971\"},{\"hex\":\"#ff84ab\"},{\"hex\":\"#ffc3d7\"},{\"hex\":\"#f2f2dd\"},{\"hex\":\"#b8d9ed\"},{\"hex\":\"#81b1d0\"},{\"hex\":\"#3d8bb7\"},{\"hex\":\"#0071a8\"},{\"hex\":\"#003558\"}]},\"sequential\":{\"colors\":[{\"hex\":\"#950431\"},{\"hex\":\"#be043e\"},{\"hex\":\"#ec326d\"},{\"hex\":\"#fc82a9\"},{\"hex\":\"#febed2\"},{\"hex\":\"#fee6ee\"}]},\"qualitative\":{\"colors\":[{\"hex\":\"#c05ae0\"},{\"hex\":\"#cf2d0c\"},{\"hex\":\"#e9ab1e\"},{\"hex\":\"#86ffb5\"},{\"hex\":\"#64dfff\"},{\"hex\":\"#003f7d\"}]}}],\"value\":{\"colors\":[{\"hex\":\"#f4502a\"},{\"hex\":\"#f1c227\"},{\"hex\":\"#008a6d\"},{\"hex\":\"#00acdb\"},{\"hex\":\"#0064a8\"}]},\"default\":{\"colors\":[{\"hex\":\"#f4502a\"},{\"hex\":\"#f1c227\"},{\"hex\":\"#008a6d\"},{\"hex\":\"#00acdb\"},{\"hex\":\"#0064a8\"}]},\"category\":\"Global Settings\"},\"fontSize\":{\"name\":\"Font Size\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":\"13\",\"default\":13,\"category\":\"Global Settings\"},\"gridShow\":{\"name\":\"Show Grid\",\"type\":[{\"name\":\"Boolean\",\"level\":8,\"order\":{},\"default\":true,\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}],\"value\":true,\"default\":true,\"category\":\"Grid\"},\"nodeFill\":{\"desc\":\"fill Dot with this color\",\"name\":\"Fill Color\",\"type\":[{\"Gray\":\"#cccccc\",\"name\":\"Color\",\"Empty\":\"#ffffff\",\"level\":10,\"Neutral\":\"#cccccc\",\"default\":\"#dc4521\",\"subtype\":{\"neutral\":\"neutral\",\"negative\":\"negative\",\"positive\":\"positive\"},\"Negative\":\"#d93510\",\"Positive\":\"#3f7ab5\"}],\"value\":\"#ffffff\",\"default\":\"#fff\",\"category\":\"Dot\"},\"nodeShow\":{\"name\":\"Show Data Dot\",\"type\":[{\"name\":\"Boolean\",\"level\":8,\"order\":{},\"default\":true,\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}],\"value\":true,\"default\":true,\"category\":\"Dot\"},\"nodeSize\":{\"name\":\"Dot Size\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":\"6\",\"default\":12,\"category\":\"Dot\"},\"textFill\":{\"name\":\"Text Color\",\"type\":[{\"Gray\":\"#cccccc\",\"name\":\"Color\",\"Empty\":\"#ffffff\",\"level\":10,\"Neutral\":\"#cccccc\",\"default\":\"#dc4521\",\"subtype\":{\"neutral\":\"neutral\",\"negative\":\"negative\",\"positive\":\"positive\"},\"Negative\":\"#d93510\",\"Positive\":\"#3f7ab5\"}],\"value\":\"#000000\",\"default\":\"#000000\",\"category\":\"Global Settings\"},\"popupShow\":{\"desc\":\"show Popup when user hovers over elements\",\"name\":\"show Popup\",\"type\":[{\"name\":\"Boolean\",\"level\":8,\"order\":{},\"default\":true,\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}],\"value\":true,\"default\":true,\"category\":\"Popup\",\"rebindOnChange\":true},\"xAxisShow\":{\"name\":\"Show Axis\",\"type\":[{\"name\":\"Boolean\",\"level\":8,\"order\":{},\"default\":true,\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}],\"value\":true,\"default\":true,\"category\":\"X Axis\"},\"yAxisShow\":{\"name\":\"Show Axis\",\"type\":[{\"name\":\"Boolean\",\"level\":8,\"order\":{},\"default\":true,\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}],\"value\":true,\"default\":true,\"category\":\"Y Axis\"},\"background\":{\"name\":\"Background\",\"type\":[{\"Gray\":\"#cccccc\",\"name\":\"Color\",\"Empty\":\"#ffffff\",\"level\":10,\"Neutral\":\"#cccccc\",\"default\":\"#dc4521\",\"subtype\":{\"neutral\":\"neutral\",\"negative\":\"negative\",\"positive\":\"positive\"},\"Negative\":\"#d93510\",\"Positive\":\"#3f7ab5\"}],\"value\":\"#ffffff\",\"default\":\"#ffffff\",\"category\":\"Global Settings\"},\"fontFamily\":{\"name\":\"Font\",\"type\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}],\"value\":\"Arial\",\"default\":\"Arial\",\"category\":\"Global Settings\"},\"gridStroke\":{\"name\":\"Color\",\"type\":[{\"Gray\":\"#cccccc\",\"name\":\"Color\",\"Empty\":\"#ffffff\",\"level\":10,\"Neutral\":\"#cccccc\",\"default\":\"#dc4521\",\"subtype\":{\"neutral\":\"neutral\",\"negative\":\"negative\",\"positive\":\"positive\"},\"Negative\":\"#d93510\",\"Positive\":\"#3f7ab5\"}],\"value\":\"#cccccc\",\"default\":\"#ccc\",\"category\":\"Grid\"},\"legendShow\":{\"name\":\"Show Legend\",\"type\":[{\"name\":\"Boolean\",\"level\":8,\"order\":{},\"default\":true,\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}],\"value\":true,\"default\":true,\"category\":\"Legend\"},\"xAxisLabel\":{\"name\":\"Label\",\"type\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}],\"value\":\"\",\"default\":\"\",\"category\":\"X Axis\"},\"legendLabel\":{\"name\":\"Label\",\"type\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}],\"value\":\"\",\"category\":\"Legend\"},\"strokeWidth\":{\"desc\":\"Default Stroke width\",\"name\":\"Stroke Width\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":\"2\",\"default\":\"2\",\"category\":\"Global Settings\"},\"xAxisStroke\":{\"name\":\"Stroke Color\",\"type\":[{\"Gray\":\"#cccccc\",\"name\":\"Color\",\"Empty\":\"#ffffff\",\"level\":10,\"Neutral\":\"#cccccc\",\"default\":\"#dc4521\",\"subtype\":{\"neutral\":\"neutral\",\"negative\":\"negative\",\"positive\":\"positive\"},\"Negative\":\"#d93510\",\"Positive\":\"#3f7ab5\"}],\"value\":\"#000000\",\"default\":\"#000\",\"category\":\"X Axis\"},\"gridDashArray\":{\"desc\":\"SVG style dash array. '2 4' means 2px line and 4px space.\",\"name\":\"Dash Style\",\"type\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}],\"value\":\"2 4\",\"default\":\"2 4\",\"category\":\"Grid\"},\"xAxisTickCount\":{\"desc\":\"Hint on number of tick. Actual number will be decided by program\",\"name\":\"Tick Count\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":0,\"default\":0,\"category\":\"X Axis\"},\"yAxisTickCount\":{\"desc\":\"Hint on number of tick. Actual number will be decided by program\",\"name\":\"Tick Count\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":6,\"default\":6,\"category\":\"Y Axis\"},\"gridStrokeWidth\":{\"name\":\"Stroke Width\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":1,\"default\":1,\"category\":\"Grid\"},\"nodeStrokeWidth\":{\"name\":\"Stroke Width\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":\"2\",\"default\":2,\"category\":\"Dot\"},\"xAxisShowDomain\":{\"name\":\"Show Basline\",\"type\":[{\"name\":\"Boolean\",\"level\":8,\"order\":{},\"default\":true,\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}],\"value\":true,\"default\":true,\"category\":\"X Axis\"},\"yAxisShowDomain\":{\"name\":\"Show Basline\",\"type\":[{\"name\":\"Boolean\",\"level\":8,\"order\":{},\"default\":true,\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}],\"value\":true,\"default\":true,\"category\":\"Y Axis\"},\"xAxisTickPadding\":{\"name\":\"Tick Padding\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":4,\"default\":4,\"category\":\"X Axis\"},\"yAxisTickPadding\":{\"name\":\"Tick Padding\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":4,\"default\":4,\"category\":\"Y Axis\"},\"xAxisHandleOverlap\":{\"desc\":\"How should overlapped ticks be taken care?\",\"name\":\"Overlap Ticks\",\"type\":[{\"name\":\"Choice\",\"level\":20,\"values\":[\"none\",\"hidden\",\"offset\"],\"default\":\"\"}],\"value\":\"hidden\",\"default\":\"hidden\",\"category\":\"X Axis\"},\"xAxisLabelPosition\":{\"name\":\"Label Position\",\"type\":[{\"name\":\"Choice\",\"level\":20,\"values\":[\"in\",\"center\"],\"default\":\"\"}],\"value\":\"center\",\"default\":\"center\",\"category\":\"X Axis\"},\"xAxisTickDirection\":{\"name\":\"Tick Direction\",\"type\":[{\"name\":\"Choice\",\"level\":20,\"values\":[\"vertical\",\"horizontal\"],\"default\":\"\"}],\"value\":\"horizontal\",\"default\":\"horizontal\",\"category\":\"X Axis\"},\"xAxisTickSizeInner\":{\"name\":\"Inner Tick Size\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":4,\"default\":4,\"category\":\"X Axis\"},\"xAxisTickSizeOuter\":{\"name\":\"Outer Tick Size\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":0,\"default\":0,\"category\":\"X Axis\"},\"yAxisTickSizeInner\":{\"name\":\"Inner Tick Size\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":4,\"default\":4,\"category\":\"Y Axis\"},\"yAxisTickSizeOuter\":{\"name\":\"Outer Tick Size\",\"type\":[{\"name\":\"Number\",\"level\":8,\"order\":{},\"default\":0,\"basetype\":[{\"name\":\"Numstring\",\"level\":6,\"order\":{},\"default\":\"\",\"basetype\":[{\"name\":\"Order\",\"level\":4,\"order\":{},\"basetype\":[{\"name\":\"String\",\"level\":2,\"default\":\"\",\"basetype\":[]}]}]}]}],\"value\":\"4\",\"default\":0,\"category\":\"Y Axis\"}},\"library\":[\"d3/3.5.12/min\",\"plotd3/0.1.0\"],\"local\":null,\"inherit\":[],\"metashow\":null,\"footer\":null}","obj":{"ownername":"plotdb","key":2143,"name":"Multi-Axes Line Chart","owner":4,"theme":null,"parent":null,"description":"a general multiple line chart with un-aligned y axes.","basetype":["2"],"visualencoding":["2","4"],"category":["5"],"tags":null,"likes":0,"searchable":true,"dimlen":2,"createdtime":"2016-11-21T20:06:06.000Z","modifiedtime":"2017-01-28T06:16:42.000Z","doc":{"name":"document","size":0,"type":"html","lines":1,"content":""},"style":{"name":"stylesheet","size":0,"type":"css","lines":1,"content":""},"code":{"name":"code","size":11378,"type":"javascript","lines":289,"content":"{\n  sample: function() {\n    var list = d3.range(Math.round(Math.random() * 5 + 15));\n    var series = d3.range(Math.round(Math.random() * 2 + 3));\n    return {\n      order: [{name: \"Order\", data: list.map(function(d,i) { return i; })}],\n      values: series.map(function(e,j) {\n        return {\n          name: \"Series \" + (j+1),\n          data: list.map(function(d,i) {\n            return (\n              Math.sin(j*2 + Math.random() * 0.1 + Math.PI * i / (20+Math.random())) + \n              Math.cos(j*3 + Math.random() * 0.2 + Math.PI * (15 - i) / (24+Math.random() * 2)) \n            )\n          })\n        };\n      })\n    };\n  },\n  dimension: {\n    order: { type: [plotdb.Order], require: false, desc: \"order in X axis\"},\n    values: { type: [plotdb.Number], require: true, desc: \"position in Y axis\", multiple: true }\n  },\n  config: {\n    fontFamily: {},\n    background: {},\n    textFill: {},\n    fontSize: {},\n    margin: {},\n    palette: {},\n    legendShow: {},\n    legendLabel: {},\n    strokeWidth: {},\n    nodeSize: {default: 12},\n    nodeShow: {},\n    nodeStrokeWidth: {default: 2},\n    nodeFill: {default: \"#fff\"},\n    gridStroke: {},\n    gridStrokeWidth: {},\n    gridDashArray: {},\n    gridShow: {},\n    yAxisShow: {},\n    yAxisTickSizeInner: {},\n    yAxisTickSizeOuter: {},\n    yAxisTickPadding: {},\n    yAxisShowDomain: {default: true},\n    yAxisTickCount: {},\n    xAxisShow: {},\n    xAxisLabel: {},\n    xAxisTickSizeInner: {},\n    xAxisTickSizeOuter: {},\n    xAxisTickPadding: {},\n    xAxisShowDomain: {default: true},\n    xAxisTickCount: {default: 0},\n    xAxisStroke: {},\n    xAxisLabelPosition: {},\n    xAxisHandleOverlap: {},\n    xAxisTickDirection: {},\n    popupShow: {},\n    sort: {rebindOnChange: true}\n  },\n  init: function() {\n    var that = this;\n    this.svg = d3.select(this.root).append(\"svg\");\n    this.xAxisGroup = this.svg.append(\"g\").attr({class: \"axis horizontal\"});\n    this.yAxisGroups = this.svg.append(\"g\").attr({class: \"axes\"});\n    this.gridGroup = this.svg.append(\"g\").attr({class: \"grid-group\"});\n    this.legendGroup = this.svg.append(\"g\").attr({class: \"legend-group\"});\n    this.dataGroup = this.svg.append(\"g\").attr({class: \"data-group\"});\n    this.grid = plotd3.rwd.grid();\n    this.tooltip = plotd3.html.tooltip(this.root).on(\"mousemove\", function(d,i,popup) {\n      popup.select(\".title\").text(that.names[d.idx] + \" / \" + d.x);\n      popup.select(\".value\").text(Math.round(100*d.y)/100);\n    });\n  },\n  parse: function() {\n    var that = this;\n    console.log(this.data);\n    if(this.config.sort && this.config.sort != \"None\") {\n      plotdb.Order.sort(this.data, \"order\", this.config.sort == \"Ascending\");\n    }\n    this.parsed = this.dimension.values.fields.map(function() { return []; });\n    this.data.map(function(d,i) {\n      that.parsed.forEach(function(e,j) { e.push({x: d.order, y: d.values[j], idx: j}); });\n    });\n    this.valueRanges = this.parsed.map(function(d,i) { return d3.extent(d,function(e,j) { return e.y; }); });\n    this.orders = this.data.map(function(d,i) { return d.order; });\n    this.names = this.dimension.values.fieldName;\n  },\n  bind: function() {\n    var that = this,sel;\n    sel = this.dataGroup.selectAll(\"g.data\").data(this.parsed);\n    sel.exit().attr(\"class\",\"\").transition(\"exit\").duration(500).attr(\"opacity\", 0).remove();\n    sel.enter().append(\"g\").attr({class: \"data\", opacity: 0});\n    this.dataGroup.selectAll(\"g.data\").each(function(d,i) {\n      var sel,node = d3.select(this);\n      node.append(\"path\").attr({class: \"data\"});\n      sel = node.selectAll(\"circle.node\").data(d);\n      sel.exit().remove();\n      sel = sel.enter().append(\"circle\").attr({class: \"node\"});\n      if(that.config.popupShow) that.tooltip.nodes(sel);\n    });\n  },\n  resize: function() {\n    var that = this;\n    var box = this.root.getBoundingClientRect();\n    var width = this.width = box.width;\n    var height = this.height = box.height;\n    this.svg.attr({\n      width: width + \"px\", height: height + \"px\",\n      viewBox: [0,0,width,height].join(\" \"),\n      preserveAspectRatio: \"xMidYMid\"\n    });\n    this.tooltip.fontSize(this.config.fontSize);\n    this.cScale = plotdb.Palette.scale.ordinal(this.config.palette);\n    this.legend = plotd3.rwd.legend().orient(\"bottom\").scale(this.cScale)\n      .fontSize(this.config.fontSize)\n      .label(this.config.legendLabel)\n      .size([this.width - 2 * this.config.margin, 100])\n      .tickValues(this.names);\n    this.legendGroup.call(this.legend);\n    this.legendGroup.selectAll(\".legend\").on(\"mouseover\", function(d,i) {\n      that.activeGroup = d; that.render();\n    }).on(\"mouseout\", function(d,i) {\n      that.activeGroup = null; that.render();\n    });\n    this.legendSize = this.config.legendShow ? this.legend.offset() : [0,0];\n    this.xScale = d3.scale.ordinal()\n      .domain(this.orders)\n      .rangeBands([this.config.margin, this.width - this.config.margin], 0, 0);\n    this.xAxis = plotd3.rwd.axis()\n      .orient(\"bottom\")\n      .scale(this.xScale)\n      .label(this.config.xAxisLabel || \"\")\n      .labelPosition(this.config.xAxisLabelPosition)\n      .tickSize(this.config.xAxisTickSizeInner, this.config.xAxisTickSizeOuter)\n      .tickPadding(this.config.xAxisTickPadding)\n      .ticks(this.config.xAxisTickCount)\n      .tickDirection(this.config.xAxisTickDirection)\n      .handleOverlap(this.config.xAxisHandleOverlap)\n      .tickFormat(function(d,i) {\n        if(typeof(that.orders[i])==\"undefined\") return \"\";\n        return that.orders[i].value || that.orders[i];\n      })\n      .fontSize(this.config.fontSize);\n    this.xAxisGroup.call(this.xAxis);\n    this.xAxisHeight = (this.config.xAxisShow ? this.xAxis.offset(): 0);\n    this.yScales = [];\n    this.yAxes = [];\n    this.yAxisWidthes = [];\n    this.lineBuilders = [];\n    var sel = this.yAxisGroups.selectAll(\"g.axis.vertical\").data(this.parsed);\n    sel.exit().remove();\n    sel.enter().append(\"g\").attr({class: \"axis vertical\"});\n    this.yAxisGroups.selectAll(\"g.axis.vertical\").each(function(d,i) {\n      var yScale, yAxis, node;\n      node = d3.select(this);\n      yScale = d3.scale.linear()\n        .domain(that.valueRanges[i])\n        .range([\n          that.height - that.config.margin - that.xAxisHeight - (that.config.legendShow ? that.legendSize[1] + that.config.fontSize : 0), \n          that.config.margin\n        ]);\n      yAxis = plotd3.rwd.axis()\n        .orient(i==0?\"left\":\"right\")\n        .scale(yScale)\n        .ticks(that.config.yAxisTickCount)\n        .tickSize(that.config.yAxisTickSizeInner, that.config.yAxisTickSizeOuter)\n        .tickPadding(that.config.yAxisTickPadding)\n        .fontSize(that.config.fontSize);\n      node.call(yAxis);\n      var yAxisWidth = (that.config.yAxisShow ? yAxis.offset() + that.config.fontSize: 0);\n      var lineBuilder = d3.svg.line()\n        .x(function(d,i) { return that.xScale(d.x) + that.xBand/2; })\n        .y(function(d,i) { return yScale(d.y); });\n      that.yScales.push(yScale);\n      that.yAxes.push(yAxis);\n      that.lineBuilders.push(lineBuilder);\n      that.yAxisWidthes.push(yAxisWidth);\n    });\n    var rightAxisWidthes = 0;\n    for(var i=1;i<this.yAxisWidthes.length;i++) {\n      rightAxisWidthes += this.yAxisWidthes[i];\n    }\n    this.xScale.rangeBands([\n      this.config.margin + this.yAxisWidthes[0], this.width - this.config.margin - rightAxisWidthes,\n    ], 0, 0);\n    this.xAxisGroup.call(this.xAxis);\n    this.xBand = this.xScale.rangeBand();\n    this.rightAxisWidthes = rightAxisWidthes;\n    this.yAxisOffset = [\n      this.config.margin + this.yAxisWidthes[0]\n    ];\n    for(var ret,i=1,sum=0;i<this.yAxisWidthes.length;i++) {\n      this.yAxisOffset.push(this.width - this.rightAxisWidthes - this.config.margin + sum);\n      sum += this.yAxisWidthes[i];\n    }\n    this.grid.scale(this.yScales[0])\n      .stroke(this.config.gridStroke)\n      .strokeWidth(this.config.gridStrokeWidth)\n      .size(this.width - 2 * this.config.margin - rightAxisWidthes - this.yAxisWidthes[0])\n      .strokeDashArray(this.config.gridDashArray)\n      .tickValues(this.yAxes[0].tickValues())\n      .orient(\"horizontal\");\n    this.gridGroup.call(this.grid);\n  },\n  render: function() {\n    var that = this;\n    if(this.config.fontFamily) d3.select(this.root).style(\"font-family\", this.config.fontFamily);\n    d3.select(this.root).style(\"background-color\", this.config.background);\n    this.svg.selectAll(\"text\").attr({\n      \"font-size\": that.config.fontSize,\n      \"fill\": that.config.textFill\n    });\n    this.gridGroup.attr({\n      transform: [\n        \"translate(\",\n        this.config.margin + this.yAxisWidthes[0],\n        0,\n        \")\"\n      ].join(\" \"),\n      display: (this.config.gridShow ? \"block\" : \"none\")\n    });\n    this.legendGroup.attr({\n      transform: [\n        \"translate(\",\n        (this.width - this.legendSize[0])/2,\n        (this.height - this.config.margin - this.legendSize[1]),\n        \")\"\n      ].join(\" \"),\n      display: this.config.legendShow ? \"block\" : \"none\"\n    });\n    this.xAxisGroup.attr({\n      \"transform\": \"translate(0,\" + (this.height - this.config.margin - this.xAxisHeight - (this.config.legendShow? this.legendSize[1] + this.config.fontSize : 0)) + \")\",\n      display: this.config.xAxisShow ? \"block\" : \"none\"\n    });\n    this.yAxisGroups.selectAll(\"g.axis.vertical\").each(function(d,i) {\n      var node = d3.select(this);\n      node.attr({\n        transform: [\n          \"translate(\",\n          that.yAxisOffset[i],\n          0,\n          \")\"\n        ].join(\" \"),\n        display: that.config.yAxisShow ? \"block\" : \"none\"\n      });\n      node.selectAll(\"line\").attr({stroke: that.cScale(that.names[i])});\n      node.select(\"path\").attr({stroke: that.cScale(that.names[i])});\n    });\n    this.yAxisGroups.selectAll(\".domain\").attr({ display: (this.config.yAxisShowDomain ? \"block\" : \"none\")});\n    this.xAxisGroup.selectAll(\".domain\").attr({ display: (this.config.xAxisShowDomain ? \"block\" : \"none\")});\n    this.xAxisGroup.selectAll(\"path,line\").attr({ stroke: that.config.xAxisStroke });\n    this.dataGroup.selectAll(\"g.data\").each(function(d,i) {\n      var node = d3.select(this);\n      node.select(\"path\").attr({\n        fill: \"none\",\n        stroke: function(e,j) { return that.cScale(that.names[i]); },\n        \"stroke-width\": that.config.strokeWidth\n      }).transition(\"morph\").duration(500).attr({\n        d: function(e,j) { return that.lineBuilders[i](d); },\n      });\n    });\n    this.dataGroup.selectAll(\"g.data\").each(function(e,j) {\n      var node = d3.select(this);\n      node.selectAll(\"circle\").attr({\n        stroke: that.cScale(that.names[j]),\n        \"stroke-width\": that.config.nodeStrokeWidth,\n        fill: that.config.nodeFill,\n        display: that.config.nodeShow ? \"block\" : \"none\"\n      }).transition(\"morph\").duration(500).attr({\n        cx: function(d,i) { return that.xScale(d.x) + that.xBand/2; },\n        cy: function(d,i) { return that.yScales[j](d.y); },\n        r: that.config.nodeSize/2,\n      });\n    });\n    this.yAxisGroups.selectAll(\"g.axis\").transition(\"opacity\").duration(500).attr({\n      opacity: function(d,i) {\n        return (!that.activeGroup || that.activeGroup == that.names[i] ? 1 : 0.1);\n      }\n    });\n    this.dataGroup.selectAll(\"g.data\").transition(\"opacity\").duration(500).attr({\n      opacity: function(d,i) {\n        return (!that.activeGroup || that.activeGroup == that.names[i] ? 1 : 0.1);\n      }\n    });\n  }\n}\n"},"assets":[],"dimension":{"order":{"type":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"require":false,"desc":"order in X axis","fields":[{"name":"Order","data":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"datatype":"Number","bind":"order"}],"fieldName":["Order"]},"values":{"type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"require":true,"desc":"position in Y axis","multiple":true,"fields":[{"name":"Series 1","data":[-0.4784671541609517,-0.13207094448292866,0.22248715481652465,0.4319668673070616,0.787866690383299,0.9394022975381289,1.2070286522507598,1.389626874527889,1.50043633882057,1.6704761949824125,1.7166504951141848,1.756344600750007,1.818514681716029,1.8299464922189195,1.7183619491759023,1.7510749624507038],"datatype":"Number","bind":"values"},{"name":"Series 2","data":[1.1992307007300163,0.9499430222233046,0.8114156062104692,0.5541055467967776,0.14962887608032532,0.005582719737690256,-0.23197442100301235,-0.6154293482499299,-0.7350799141705642,-0.9672068183106906,-1.2623815581106395,-1.4783258174871328,-1.5812788333820822,-1.7400424051879662,-1.8475220409482698,-1.8952910673490992],"datatype":"Number","bind":"values"},{"name":"Series 3","data":[-0.9685917978770436,-0.753672400480148,-0.9338848244565986,-0.7417844281744435,-0.691565000697449,-0.5546863504572259,-0.4609648231814645,-0.175738432357748,-0.0763672576616522,0.14392428418654446,0.27582118832772007,0.4005156483234359,0.6484812318520443,0.7718657362572261,0.8500054375291763,1.0526949829333911],"datatype":"Number","bind":"values"},{"name":"Series 4","data":[-0.2567117052244774,-0.07413701099884948,-0.26971221189713235,-0.24283988060854458,-0.16213631097456016,-0.045917677641372334,-0.11439260443285992,-0.10769095175027787,0.0347868314102997,0.014619966309948551,0.03954226050284426,0.019910158339990436,-0.0009968564044551265,-0.017794618610751156,-0.04090287804337922,-0.01886643551133871],"datatype":"Number","bind":"values"},{"name":"Series 5","data":[1.1428977584819742,1.1617787952718037,1.3357401668105413,1.3537231633670996,1.280651469109471,1.3039283818709646,1.2579675612896226,1.2457212940770375,1.046778921981471,1.000294471391623,0.9021194583658441,0.6971784562130234,0.5438347864054394,0.3183830689388081,0.20393868076369348,0.025145587919309098],"datatype":"Number","bind":"values"}],"fieldName":["Series 1","Series 2","Series 3","Series 4","Series 5"]}},"config":{"sort":{"name":"Sort data","type":[{"name":"Choice","level":20,"values":["Ascending","Descending","None"],"default":""}],"value":"Ascending","default":"Descending","category":"Value","rebindOnChange":true},"margin":{"name":"Margin","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"10","default":10,"category":"Global Settings"},"palette":{"name":"Palette","type":[{"re":{},"name":"Palette","level":30,"scale":{},"binary":{"colors":[{"hex":"#ff8356"},{"hex":"#0076a1"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"subtype":{"binary":"binary","diverging":"diverging","sequential":"sequential","qualitative":"qualitative"},"diverging":{"colors":[{"hex":"#74001a"},{"hex":"#cd2149"},{"hex":"#f23971"},{"hex":"#ff84ab"},{"hex":"#ffc3d7"},{"hex":"#f2f2dd"},{"hex":"#b8d9ed"},{"hex":"#81b1d0"},{"hex":"#3d8bb7"},{"hex":"#0071a8"},{"hex":"#003558"}]},"sequential":{"colors":[{"hex":"#950431"},{"hex":"#be043e"},{"hex":"#ec326d"},{"hex":"#fc82a9"},{"hex":"#febed2"},{"hex":"#fee6ee"}]},"qualitative":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]}}],"value":{"colors":[{"hex":"#f4502a","$$hashKey":"object:187"},{"hex":"#f1c227","$$hashKey":"object:188"},{"hex":"#008a6d","$$hashKey":"object:189"},{"hex":"#00acdb","$$hashKey":"object:190"},{"hex":"#0064a8","$$hashKey":"object:191"}]},"default":{"colors":[{"hex":"#f4502a"},{"hex":"#f1c227"},{"hex":"#008a6d"},{"hex":"#00acdb"},{"hex":"#0064a8"}]},"category":"Global Settings"},"fontSize":{"name":"Font Size","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"13","default":13,"category":"Global Settings"},"gridShow":{"name":"Show Grid","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"Grid"},"nodeFill":{"desc":"fill Dot with this color","name":"Fill Color","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#ffffff","default":"#fff","category":"Dot"},"nodeShow":{"name":"Show Data Dot","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"Dot"},"nodeSize":{"name":"Dot Size","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"6","default":12,"category":"Dot"},"textFill":{"name":"Text Color","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#000000","default":"#000000","category":"Global Settings"},"popupShow":{"desc":"show Popup when user hovers over elements","name":"show Popup","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"Popup","rebindOnChange":true},"xAxisShow":{"name":"Show Axis","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"X Axis"},"yAxisShow":{"name":"Show Axis","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"Y Axis"},"background":{"name":"Background","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#ffffff","default":"#ffffff","category":"Global Settings"},"fontFamily":{"name":"Font","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"Arial","default":"Arial","category":"Global Settings"},"gridStroke":{"name":"Color","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#cccccc","default":"#ccc","category":"Grid"},"legendShow":{"name":"Show Legend","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"Legend"},"xAxisLabel":{"name":"Label","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"","default":"","category":"X Axis"},"legendLabel":{"name":"Label","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"","category":"Legend"},"strokeWidth":{"desc":"Default Stroke width","name":"Stroke Width","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"2","default":"2","category":"Global Settings"},"xAxisStroke":{"name":"Stroke Color","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#000000","default":"#000","category":"X Axis"},"gridDashArray":{"desc":"SVG style dash array. '2 4' means 2px line and 4px space.","name":"Dash Style","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"2 4","default":"2 4","category":"Grid"},"xAxisTickCount":{"desc":"Hint on number of tick. Actual number will be decided by program","name":"Tick Count","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":0,"default":0,"category":"X Axis"},"yAxisTickCount":{"desc":"Hint on number of tick. Actual number will be decided by program","name":"Tick Count","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":6,"default":6,"category":"Y Axis"},"gridStrokeWidth":{"name":"Stroke Width","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":1,"default":1,"category":"Grid"},"nodeStrokeWidth":{"name":"Stroke Width","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"2","default":2,"category":"Dot"},"xAxisShowDomain":{"name":"Show Basline","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"X Axis"},"yAxisShowDomain":{"name":"Show Basline","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"Y Axis"},"xAxisTickPadding":{"name":"Tick Padding","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":4,"default":4,"category":"X Axis"},"yAxisTickPadding":{"name":"Tick Padding","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":4,"default":4,"category":"Y Axis"},"xAxisHandleOverlap":{"desc":"How should overlapped ticks be taken care?","name":"Overlap Ticks","type":[{"name":"Choice","level":20,"values":["none","hidden","offset"],"default":""}],"value":"hidden","default":"hidden","category":"X Axis"},"xAxisLabelPosition":{"name":"Label Position","type":[{"name":"Choice","level":20,"values":["in","center"],"default":""}],"value":"center","default":"center","category":"X Axis"},"xAxisTickDirection":{"name":"Tick Direction","type":[{"name":"Choice","level":20,"values":["vertical","horizontal"],"default":""}],"value":"horizontal","default":"horizontal","category":"X Axis"},"xAxisTickSizeInner":{"name":"Inner Tick Size","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":4,"default":4,"category":"X Axis"},"xAxisTickSizeOuter":{"name":"Outer Tick Size","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":0,"default":0,"category":"X Axis"},"yAxisTickSizeInner":{"name":"Inner Tick Size","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":4,"default":4,"category":"Y Axis"},"yAxisTickSizeOuter":{"name":"Outer Tick Size","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":"4","default":0,"category":"Y Axis"}},"library":["d3/3.5.12/min","plotd3/0.1.0"],"local":null,"inherit":null,"metashow":null,"footer":null},"dimension":{"order":{"type":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"require":false,"desc":"order in X axis","fields":[{"name":"Order","data":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"datatype":"Number","bind":"order"}],"fieldName":["Order"]},"values":{"type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"require":true,"desc":"position in Y axis","multiple":true,"fields":[{"name":"Series 1","data":[-0.4784671541609517,-0.13207094448292866,0.22248715481652465,0.4319668673070616,0.787866690383299,0.9394022975381289,1.2070286522507598,1.389626874527889,1.50043633882057,1.6704761949824125,1.7166504951141848,1.756344600750007,1.818514681716029,1.8299464922189195,1.7183619491759023,1.7510749624507038],"datatype":"Number","bind":"values"},{"name":"Series 2","data":[1.1992307007300163,0.9499430222233046,0.8114156062104692,0.5541055467967776,0.14962887608032532,0.005582719737690256,-0.23197442100301235,-0.6154293482499299,-0.7350799141705642,-0.9672068183106906,-1.2623815581106395,-1.4783258174871328,-1.5812788333820822,-1.7400424051879662,-1.8475220409482698,-1.8952910673490992],"datatype":"Number","bind":"values"},{"name":"Series 3","data":[-0.9685917978770436,-0.753672400480148,-0.9338848244565986,-0.7417844281744435,-0.691565000697449,-0.5546863504572259,-0.4609648231814645,-0.175738432357748,-0.0763672576616522,0.14392428418654446,0.27582118832772007,0.4005156483234359,0.6484812318520443,0.7718657362572261,0.8500054375291763,1.0526949829333911],"datatype":"Number","bind":"values"},{"name":"Series 4","data":[-0.2567117052244774,-0.07413701099884948,-0.26971221189713235,-0.24283988060854458,-0.16213631097456016,-0.045917677641372334,-0.11439260443285992,-0.10769095175027787,0.0347868314102997,0.014619966309948551,0.03954226050284426,0.019910158339990436,-0.0009968564044551265,-0.017794618610751156,-0.04090287804337922,-0.01886643551133871],"datatype":"Number","bind":"values"},{"name":"Series 5","data":[1.1428977584819742,1.1617787952718037,1.3357401668105413,1.3537231633670996,1.280651469109471,1.3039283818709646,1.2579675612896226,1.2457212940770375,1.046778921981471,1.000294471391623,0.9021194583658441,0.6971784562130234,0.5438347864054394,0.3183830689388081,0.20393868076369348,0.025145587919309098],"datatype":"Number","bind":"values"}],"fieldName":["Series 1","Series 2","Series 3","Series 4","Series 5"]}},"animate":{"running":false,"last":0},"config":{"value":{"fontFamily":{"name":"Font","type":[{"default":"","name":"EditableChoice","level":20,"values":["Arial","Helvetica","Tahoma","Consolas","Century Gothic","Courier New"]}],"default":"Arial","category":"Global Settings","value":"Arial"},"background":{"name":"Background","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#ffffff","category":"Global Settings","value":"#ffffff"},"textFill":{"name":"Text Color","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#000000","category":"Global Settings","value":"#000000"},"fontSize":{"name":"Font Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":13,"category":"Global Settings","value":13},"margin":{"name":"Margin","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":10,"category":"Global Settings","min":0,"max":20,"value":10},"palette":{"name":"Palette","type":[{"name":"Palette","level":30,"re":{},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]},"qualitative":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]},"binary":{"colors":[{"hex":"#ff8356"},{"hex":"#0076a1"}]},"sequential":{"colors":[{"hex":"#950431"},{"hex":"#be043e"},{"hex":"#ec326d"},{"hex":"#fc82a9"},{"hex":"#febed2"},{"hex":"#fee6ee"}]},"diverging":{"colors":[{"hex":"#74001a"},{"hex":"#cd2149"},{"hex":"#f23971"},{"hex":"#ff84ab"},{"hex":"#ffc3d7"},{"hex":"#f2f2dd"},{"hex":"#b8d9ed"},{"hex":"#81b1d0"},{"hex":"#3d8bb7"},{"hex":"#0071a8"},{"hex":"#003558"}]},"subtype":{"qualitative":"qualitative","binary":"binary","sequential":"sequential","diverging":"diverging"},"scale":{}}],"default":{"colors":[{"hex":"#f4502a"},{"hex":"#f1c227"},{"hex":"#008a6d"},{"hex":"#00acdb"},{"hex":"#0064a8"}]},"category":"Global Settings","value":{"colors":[{"hex":"#f4502a","$$hashKey":"object:187"},{"hex":"#f1c227","$$hashKey":"object:188"},{"hex":"#008a6d","$$hashKey":"object:189"},{"hex":"#00acdb","$$hashKey":"object:190"},{"hex":"#0064a8","$$hashKey":"object:191"}]}},"legendShow":{"name":"Show Legend","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"Legend","value":true},"legendLabel":{"name":"Label","type":[{"name":"String","default":"","level":2,"basetype":[]}],"category":"Legend","value":""},"strokeWidth":{"name":"Stroke Width","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"desc":"Default Stroke width","default":"2","category":"Global Settings","value":2},"nodeSize":{"default":12,"name":"Dot Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"category":"Dot","value":6},"nodeShow":{"name":"Show Data Dot","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"Dot","value":true},"nodeStrokeWidth":{"default":2,"name":"Stroke Width","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"category":"Dot","value":2},"nodeFill":{"default":"#fff","name":"Fill Color","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"desc":"fill Dot with this color","category":"Dot","value":"#ffffff"},"gridStroke":{"name":"Color","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#ccc","category":"Grid","value":"#cccccc"},"gridStrokeWidth":{"name":"Stroke Width","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":1,"category":"Grid","value":1},"gridDashArray":{"name":"Dash Style","type":[{"name":"String","default":"","level":2,"basetype":[]}],"default":"2 4","category":"Grid","desc":"SVG style dash array. '2 4' means 2px line and 4px space.","value":"2 4"},"gridShow":{"name":"Show Grid","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"Grid","value":true},"yAxisShow":{"name":"Show Axis","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"Y Axis","value":true},"yAxisTickSizeInner":{"name":"Inner Tick Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":4,"category":"Y Axis","value":4},"yAxisTickSizeOuter":{"name":"Outer Tick Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":0,"category":"Y Axis","value":4},"yAxisTickPadding":{"name":"Tick Padding","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":4,"category":"Y Axis","value":4},"yAxisShowDomain":{"default":true,"name":"Show Basline","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"category":"Y Axis","value":true},"yAxisTickCount":{"name":"Tick Count","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":6,"category":"Y Axis","desc":"Hint on number of tick. Actual number will be decided by program","value":6},"xAxisShow":{"name":"Show Axis","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"X Axis","value":true},"xAxisLabel":{"name":"Label","type":[{"name":"String","default":"","level":2,"basetype":[]}],"default":"","category":"X Axis","value":""},"xAxisTickSizeInner":{"name":"Inner Tick Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":4,"category":"X Axis","value":4},"xAxisTickSizeOuter":{"name":"Outer Tick Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":0,"category":"X Axis","value":0},"xAxisTickPadding":{"name":"Tick Padding","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":4,"category":"X Axis","value":4},"xAxisShowDomain":{"default":true,"name":"Show Basline","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"category":"X Axis","value":true},"xAxisTickCount":{"default":0,"name":"Tick Count","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"category":"X Axis","desc":"Hint on number of tick. Actual number will be decided by program","value":0},"xAxisStroke":{"name":"Stroke Color","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#000","category":"X Axis","value":"#000000"},"xAxisLabelPosition":{"name":"Label Position","type":[{"default":"","name":"Choice","level":20,"values":["in","center"]}],"default":"center","category":"X Axis","value":"center"},"xAxisHandleOverlap":{"name":"Overlap Ticks","type":[{"default":"","name":"Choice","level":20,"values":["none","hidden","offset"]}],"default":"hidden","category":"X Axis","desc":"How should overlapped ticks be taken care?","value":"hidden"},"xAxisTickDirection":{"name":"Tick Direction","type":[{"default":"","name":"Choice","level":20,"values":["vertical","horizontal"]}],"default":"horizontal","category":"X Axis","value":"horizontal"},"popupShow":{"name":"show Popup","desc":"show Popup when user hovers over elements","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"Popup","rebindOnChange":true,"value":true},"sort":{"rebindOnChange":true,"name":"Sort data","type":[{"default":"","name":"Choice","level":20,"values":["Ascending","Descending","None"]}],"default":"Descending","category":"Value","value":"Ascending"}},"group":{"Global Settings":{"fontFamily":{"name":"Font","type":[{"default":"","name":"EditableChoice","level":20,"values":["Arial","Helvetica","Tahoma","Consolas","Century Gothic","Courier New"]}],"default":"Arial","category":"Global Settings","value":"Arial"},"background":{"name":"Background","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#ffffff","category":"Global Settings","value":"#ffffff"},"textFill":{"name":"Text Color","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#000000","category":"Global Settings","value":"#000000"},"fontSize":{"name":"Font Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":13,"category":"Global Settings","value":13},"margin":{"name":"Margin","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":10,"category":"Global Settings","min":0,"max":20,"value":10},"palette":{"name":"Palette","type":[{"name":"Palette","level":30,"re":{},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]},"qualitative":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]},"binary":{"colors":[{"hex":"#ff8356"},{"hex":"#0076a1"}]},"sequential":{"colors":[{"hex":"#950431"},{"hex":"#be043e"},{"hex":"#ec326d"},{"hex":"#fc82a9"},{"hex":"#febed2"},{"hex":"#fee6ee"}]},"diverging":{"colors":[{"hex":"#74001a"},{"hex":"#cd2149"},{"hex":"#f23971"},{"hex":"#ff84ab"},{"hex":"#ffc3d7"},{"hex":"#f2f2dd"},{"hex":"#b8d9ed"},{"hex":"#81b1d0"},{"hex":"#3d8bb7"},{"hex":"#0071a8"},{"hex":"#003558"}]},"subtype":{"qualitative":"qualitative","binary":"binary","sequential":"sequential","diverging":"diverging"},"scale":{}}],"default":{"colors":[{"hex":"#f4502a"},{"hex":"#f1c227"},{"hex":"#008a6d"},{"hex":"#00acdb"},{"hex":"#0064a8"}]},"category":"Global Settings","value":{"colors":[{"hex":"#f4502a","$$hashKey":"object:187"},{"hex":"#f1c227","$$hashKey":"object:188"},{"hex":"#008a6d","$$hashKey":"object:189"},{"hex":"#00acdb","$$hashKey":"object:190"},{"hex":"#0064a8","$$hashKey":"object:191"}]}},"strokeWidth":{"name":"Stroke Width","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"desc":"Default Stroke width","default":"2","category":"Global Settings","value":2}},"Legend":{"legendShow":{"name":"Show Legend","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"Legend","value":true},"legendLabel":{"name":"Label","type":[{"name":"String","default":"","level":2,"basetype":[]}],"category":"Legend","value":""}},"Dot":{"nodeSize":{"default":12,"name":"Dot Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"category":"Dot","value":6},"nodeShow":{"name":"Show Data Dot","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"Dot","value":true},"nodeStrokeWidth":{"default":2,"name":"Stroke Width","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"category":"Dot","value":2},"nodeFill":{"default":"#fff","name":"Fill Color","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"desc":"fill Dot with this color","category":"Dot","value":"#ffffff"}},"Grid":{"gridStroke":{"name":"Color","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#ccc","category":"Grid","value":"#cccccc"},"gridStrokeWidth":{"name":"Stroke Width","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":1,"category":"Grid","value":1},"gridDashArray":{"name":"Dash Style","type":[{"name":"String","default":"","level":2,"basetype":[]}],"default":"2 4","category":"Grid","desc":"SVG style dash array. '2 4' means 2px line and 4px space.","value":"2 4"},"gridShow":{"name":"Show Grid","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"Grid","value":true}},"Y Axis":{"yAxisShow":{"name":"Show Axis","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"Y Axis","value":true},"yAxisTickSizeInner":{"name":"Inner Tick Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":4,"category":"Y Axis","value":4},"yAxisTickSizeOuter":{"name":"Outer Tick Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":0,"category":"Y Axis","value":4},"yAxisTickPadding":{"name":"Tick Padding","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":4,"category":"Y Axis","value":4},"yAxisShowDomain":{"default":true,"name":"Show Basline","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"category":"Y Axis","value":true},"yAxisTickCount":{"name":"Tick Count","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":6,"category":"Y Axis","desc":"Hint on number of tick. Actual number will be decided by program","value":6}},"X Axis":{"xAxisShow":{"name":"Show Axis","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"X Axis","value":true},"xAxisLabel":{"name":"Label","type":[{"name":"String","default":"","level":2,"basetype":[]}],"default":"","category":"X Axis","value":""},"xAxisTickSizeInner":{"name":"Inner Tick Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":4,"category":"X Axis","value":4},"xAxisTickSizeOuter":{"name":"Outer Tick Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":0,"category":"X Axis","value":0},"xAxisTickPadding":{"name":"Tick Padding","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":4,"category":"X Axis","value":4},"xAxisShowDomain":{"default":true,"name":"Show Basline","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"category":"X Axis","value":true},"xAxisTickCount":{"default":0,"name":"Tick Count","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"category":"X Axis","desc":"Hint on number of tick. Actual number will be decided by program","value":0},"xAxisStroke":{"name":"Stroke Color","type":[{"name":"Color","level":10,"default":"#dc4521","Gray":"#cccccc","Positive":"#3f7ab5","Negative":"#d93510","Neutral":"#cccccc","Empty":"#ffffff","subtype":{"negative":"negative","positive":"positive","neutral":"neutral"}}],"default":"#000","category":"X Axis","value":"#000000"},"xAxisLabelPosition":{"name":"Label Position","type":[{"default":"","name":"Choice","level":20,"values":["in","center"]}],"default":"center","category":"X Axis","value":"center"},"xAxisHandleOverlap":{"name":"Overlap Ticks","type":[{"default":"","name":"Choice","level":20,"values":["none","hidden","offset"]}],"default":"hidden","category":"X Axis","desc":"How should overlapped ticks be taken care?","value":"hidden"},"xAxisTickDirection":{"name":"Tick Direction","type":[{"default":"","name":"Choice","level":20,"values":["vertical","horizontal"]}],"default":"horizontal","category":"X Axis","value":"horizontal"}},"Popup":{"popupShow":{"name":"show Popup","desc":"show Popup when user hovers over elements","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"category":"Popup","rebindOnChange":true,"value":true}},"Value":{"sort":{"rebindOnChange":true,"name":"Sort data","type":[{"default":"","name":"Choice","level":20,"values":["Ascending","Descending","None"]}],"default":"Descending","category":"Value","value":"Ascending"}}}},"data":{"data":[{"name":"Order","data":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"datatype":"Number","bind":"order"},{"name":"Series 1","data":[-0.4784671541609517,-0.13207094448292866,0.22248715481652465,0.4319668673070616,0.787866690383299,0.9394022975381289,1.2070286522507598,1.389626874527889,1.50043633882057,1.6704761949824125,1.7166504951141848,1.756344600750007,1.818514681716029,1.8299464922189195,1.7183619491759023,1.7510749624507038],"datatype":"Number","bind":"values"},{"name":"Series 2","data":[1.1992307007300163,0.9499430222233046,0.8114156062104692,0.5541055467967776,0.14962887608032532,0.005582719737690256,-0.23197442100301235,-0.6154293482499299,-0.7350799141705642,-0.9672068183106906,-1.2623815581106395,-1.4783258174871328,-1.5812788333820822,-1.7400424051879662,-1.8475220409482698,-1.8952910673490992],"datatype":"Number","bind":"values"},{"name":"Series 3","data":[-0.9685917978770436,-0.753672400480148,-0.9338848244565986,-0.7417844281744435,-0.691565000697449,-0.5546863504572259,-0.4609648231814645,-0.175738432357748,-0.0763672576616522,0.14392428418654446,0.27582118832772007,0.4005156483234359,0.6484812318520443,0.7718657362572261,0.8500054375291763,1.0526949829333911],"datatype":"Number","bind":"values"},{"name":"Series 4","data":[-0.2567117052244774,-0.07413701099884948,-0.26971221189713235,-0.24283988060854458,-0.16213631097456016,-0.045917677641372334,-0.11439260443285992,-0.10769095175027787,0.0347868314102997,0.014619966309948551,0.03954226050284426,0.019910158339990436,-0.0009968564044551265,-0.017794618610751156,-0.04090287804337922,-0.01886643551133871],"datatype":"Number","bind":"values"},{"name":"Series 5","data":[1.1428977584819742,1.1617787952718037,1.3357401668105413,1.3537231633670996,1.280651469109471,1.3039283818709646,1.2579675612896226,1.2457212940770375,1.046778921981471,1.000294471391623,0.9021194583658441,0.6971784562130234,0.5438347864054394,0.3183830689388081,0.20393868076369348,0.025145587919309098],"datatype":"Number","bind":"values"}]},"library":{"hash":{"plotd3/0.1.0":"blob:https://plotdb.com/24f91cc1-a724-422c-92ba-9df3c47d1cae","d3/3.5.12/min":"blob:https://plotdb.com/d6d60ca0-5def-43fe-bae7-7865d1cf016d"}},"promise":{"sample":null}}